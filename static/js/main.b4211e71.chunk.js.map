{"version":3,"sources":["components/ErrorBoundary.js","components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/MetaTags/MetaTags.js","services/RMDBService.js","components/elements/Page/Page.js","components/elements/Grid/Grid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","FAicons.js","index.js"],"names":["ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","errorInfo","setState","console","componentStack","_this$state","react_default","a","createElement","style","whiteSpace","toString","children","Component","Header","className","react_router_dom","to","src","concat","process","alt","href","target","rel","NotFound","onClick","history","goBack","API_URL","API_KEY","NO_IMAGE_URL","getImageUrl","imageSize","isBackdrop","imagePath","noImageUrl","getBackdropUrl","getPosterUrl","getThumbUrl","getProfileUrl","LANG","MetaTags","_ref","title","desc","image","Helmet","lang","name","content","property","document","location","RMDBService","Wrapped","_len","arguments","length","queryProps","Array","_key","_Component","_temp","_getPrototypeOf2","_this2","_len2","args","_key2","apply","movies","response","loading","currentPage","totalPages","searchTerm","match","params","createEndpoint","type","typeId","options","id","_endpoint","fetchItems","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","status_code","results","_ref2","toConsumableArray","page","total_pages","t0","stop","updateItems","loadMore","newSearchTerm","_ref3","inherits","createClass","key","value","prevProps","assign","Page","Grid","header","isActors","contentClasses","cn","rmdb-grid-content","rmdb-grid-content-actor","components_ErrorBoundary","map","el","i","HeroImage","text","bgImage","backgroundImage","LoadMoreBtn","genders","MovieThumb","clickable","year","movieId","gender","character","SearchBar","handleSubmit","e","preventDefault","trim","push","handleInput","selectText","select","onSubmit","index_es","icon","placeholder","onFocus","onChange","withRouter","Spinner","heroImage","elements_Page_Page","elements_MetaTags_MetaTags","backdrop_path","elements_HeroImage_HeroImage","original_title","overview","elements_SearchBar_SearchBar","elements_Grid_Grid","elements_MovieThumb_MovieThumb","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","MovieInfo","movie","genres","vote_average","credits","directors","crew","filter","job","genresNames","g","join","min","max","optimum","low","high","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","size","time","hours","Math","floor","mins","calcTime","Breadcrumbs","actors","cast","Fragment","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","ActorInfo","_ref$actor","biography","gen","ActorInfoBar","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","ageStr","_genders$gender","movie_credits","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","App","elements_Header_Header","react_router","path","component","Home","exact","Search","Movie","library","add","fab","faSearch","faCalendarAlt","faClock","faMoneyBillAlt","faTicketAlt","faGenderless","faMars","faVenus","faGlobe","ReactDOM","render","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.b4211e71.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error, errorInfo });\n    console.error(error, errorInfo.componentStack);\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (error) {\n      return (\n        <div>\n          <h3>Stranger things happen here...</h3>\n          <p>Keep calm, we called El to fix it.</p>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error && error.toString()}\n            {errorInfo && errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <a\n          href='https://www.themoviedb.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            className='rmdb-tmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/movie-db-logo.svg`}\n            alt='tmdb-logo'\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = props => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n    <button onClick={props.history.goBack}>Go to previous page</button>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=844dba0bfd8f3a4f3799f6130ef9e335\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\nconst VIDEO_URL = 'https://www.youtube.com/watch?v=';\n\nconst getImageUrl = (imageSize, isBackdrop) => imagePath => {\n  const noImageUrl = isBackdrop ? '' : NO_IMAGE_URL;\n  return imagePath ? `${IMAGE_BASE_URL}${imageSize}${imagePath}` : noImageUrl;\n};\n\nconst getBackdropUrl = getImageUrl('w1280', true);\nconst getPosterUrl = getImageUrl('w500');\nconst getThumbUrl = getImageUrl('w300');\nconst getProfileUrl = getImageUrl('w154');\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  VIDEO_URL,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl,\n  getThumbUrl,\n  getProfileUrl\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { LANG } from '../../../config';\n\nconst MetaTags = ({ title, desc, image }) => (\n  <Helmet>\n    <html lang={LANG} />\n    <title>{title}</title>\n    <meta name='title' content={title} />\n    <meta name='description' content={desc} />\n    <meta property='og:type' content='website' />\n    <meta property='og:url' content={document.location.href} />\n    <meta property='og:title' content={title} />\n    <meta property='og:description' content={desc} />\n    <meta property='og:image' content={image} />\n    <meta property='twitter:card' content='summary_large_image' />\n    <meta property='twitter:url' content={document.location.href} />\n    <meta property='twitter:title' content={title} />\n    <meta property='twitter:description' content={desc} />\n    <meta property='twitter:image' content={image} />\n    <link rel='canonical' href={document.location.href} />\n  </Helmet>\n);\n\nMetaTags.propTypes = {\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default MetaTags;\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY, LANG } from '../config';\n\nconst RMDBService = (Wrapped, ...queryProps) => {\n  return class extends Component {\n    state = {\n      movies: [],\n      response: null,\n      loading: true,\n      currentPage: 1,\n      totalPages: 1,\n      searchTerm: this.props.match.params.searchTerm || ''\n    };\n\n    createEndpoint = (type, typeId, options) => () => {\n      const { id } = this.props.match.params;\n      const { currentPage, searchTerm } = this.state;\n      return `${API_URL}${type}/${typeId ||\n        id}?api_key=${API_KEY}&language=${LANG}&append_to_response=${options}&query=${searchTerm}&page=${currentPage}`;\n    };\n\n    _endpoint = this.createEndpoint(...queryProps);\n\n    componentDidMount() {\n      this.fetchItems();\n    }\n\n    componentDidUpdate(prevProps) {\n      const { searchTerm } = this.props.match.params;\n      if (prevProps.match.params.searchTerm !== searchTerm) {\n        this.updateItems(false, searchTerm);\n      }\n    }\n\n    fetchItems = async () => {\n      try {\n        const response = await (await fetch(this._endpoint())).json();\n        if (response.status_code) {\n          this.setState({ loading: false });\n        } else if (response.results) {\n          this.setState(({ movies }) => ({\n            movies: [...movies, ...response.results],\n            loading: false,\n            currentPage: response.page,\n            totalPages: response.total_pages\n          }));\n        } else {\n          this.setState({ response, loading: false });\n        }\n      } catch (e) {\n        console.error('Fetch error:', e);\n      }\n    };\n\n    updateItems = (loadMore, newSearchTerm) => {\n      this.setState(\n        ({ movies, searchTerm, currentPage }) => ({\n          movies: loadMore ? [...movies] : [],\n          loading: true,\n          searchTerm: loadMore ? searchTerm : newSearchTerm,\n          currentPage: loadMore ? currentPage + 1 : 1\n        }),\n        this.fetchItems\n      );\n    };\n\n    render() {\n      return (\n        <Wrapped\n          {...this.state}\n          {...this.props}\n          updateItems={this.updateItems}\n        />\n      );\n    }\n  };\n};\n\nexport default RMDBService;\n","import React from 'react';\nimport './Page.css';\n\nconst Page = ({ children }) => {\n  return <main className='rmdb-page'>{children}</main>;\n};\n\nexport default Page;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport ErrorBoundary from '../../ErrorBoundary';\nimport './Grid.css';\n\nconst Grid = ({ children, header, loading, isActors }) => {\n  const renderElements = () =>\n    children &&\n    children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n  const contentClasses = cn({\n    'rmdb-grid-content': true,\n    'rmdb-grid-content-actor': isActors\n  });\n\n  return (\n    <ErrorBoundary>\n      <div className='rmdb-grid'>\n        <div className='rmdb-container'>\n          {header && !loading && <h2>{header}</h2>}\n          <div className={contentClasses}>{renderElements()}</div>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool,\n  isActors: PropTypes.bool\n};\n\nexport default Grid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  const bgImage = {\n    backgroundImage: `url('${image}')`\n  };\n  return (\n    <div className='rmdb-heroimage' style={bgImage}>\n      <div className='rmdb-heroimage-content rmdb-container'>\n        <div className='rmdb-heroimage-text'>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-container'>\n    <button\n      type='button'\n      className='rmdb-loadmorebtn'\n      onClick={() => onClick(true)}\n    >\n      {text}\n    </button>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst genders = ['Itself', 'Herself', 'Himself'];\n\nconst MovieThumb = ({\n  clickable,\n  image,\n  title,\n  year,\n  movieId,\n  gender,\n  character\n}) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`} className='rmdb-moviethumb-wrapper'>\n          <img className='rmdb-moviethumb-image' src={image} alt={title} />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n            <br />\n            {gender && (\n              <span>Character: {character ? character : genders[gender]}</span>\n            )}\n          </p>\n        </Link>\n      ) : (\n        <img className='rmdb-moviethumb-image' src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  gender: PropTypes.number,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const value = this.state.value.trim();\n    const { searchTerm } = this.props.match.params;\n    if (value !== '' && value !== searchTerm) {\n      this.props.history.push(`/search/${value}`);\n    }\n  };\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n  selectText = ({ target }) => {\n    target.select();\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.props.match.params;\n    searchTerm && this.setState({ value: searchTerm });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.setState({ value: searchTerm });\n    }\n  }\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <form className='rmdb-searchbar-form' onSubmit={this.handleSubmit}>\n            <label className='rmdb-searchbar-label'>\n              <FontAwesomeIcon className='rmdb-searchbar-icon' icon='search' />\n              <span className='visually-hidden'>Search</span>\n              <input\n                type='text'\n                name='search'\n                className='rmdb-searchbar-input'\n                placeholder='Search'\n                onFocus={this.selectText}\n                onChange={this.handleInput}\n                value={this.state.value}\n              />\n            </label>\n            <button className='rmdb-searchbar-submit'>Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getBackdropUrl, getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Grid from '../elements/Grid/Grid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Home = ({ loading, movies, currentPage, totalPages, updateItems }) => {\n  const heroImage = movies.length > 0 ? movies[0] : {};\n  return (\n    <Page>\n      <MetaTags\n        title={'RMDB - Popular Movies'}\n        desc={\n          'React Movie (or RMDB) is a database for searching information about movies and actors'\n        }\n        image={getBackdropUrl(heroImage.backdrop_path)}\n      />\n      <HeroImage\n        image={getBackdropUrl(heroImage.backdrop_path)}\n        title={heroImage.original_title}\n        text={heroImage.overview}\n      />\n      <SearchBar />\n      <Grid header={'Popular Movies'} loading={loading}>\n        {movies.map(el => (\n          <MovieThumb\n            key={el.id}\n            clickable\n            title={el.title}\n            year={el.release_date && el.release_date.slice(0, 4)}\n            image={getPosterUrl(el.poster_path)}\n            movieId={el.id}\n            movieName={el.title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text='Load More' onClick={updateItems} />\n      )}\n    </Page>\n  );\n};\n\nexport default RMDBService(Home, 'movie', 'popular');\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../../config';\nimport './Actor.css';\n\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <Link to={`/actor/${actor.id}`} className='rmdb-actor-image'>\n      <img src={getProfileUrl(actor.profile_path)} alt={actor.name} />\n    </Link>\n    <div className='rmdb-actor-info'>\n      <Link to={`/actor/${actor.id}`}>\n        <p className='rmdb-actor-name'>{actor.name}</p>\n      </Link>\n      <p className='rmdb-actor-character'>{actor.character}</p>\n    </div>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport { getBackdropUrl, getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average,\n    credits\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url(${getBackdropUrl(backdrop_path)})`\n  };\n  const directors = credits.crew.filter(crew => crew.job === 'Director');\n  const genresNames = genres.map(g => g.name).join(', ');\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb image={getPosterUrl(poster_path)} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          <h2>Plot</h2>\n          <p>{overview}</p>\n          <div className='rmdb-info-sections'>\n            <div className='rmdb-info-section'>\n              <h2>Genres</h2>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h2>IMDB rating</h2>\n              <div className='rmdb-rating'>\n                <meter\n                  className='rmdb-rating-scale'\n                  min='0'\n                  max='100'\n                  optimum='100'\n                  low='40'\n                  high='70'\n                  value={vote_average * 10}\n                />\n                <p className='rmdb-rating-score'>{vote_average}</p>\n              </div>\n            </div>\n            <div className='rmdb-info-section'>\n              {directors.length > 1 ? <h2>Directors</h2> : <h2>Director</h2>}\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  if (!time || time === 0) {\n    return 'n/a';\n  }\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  if (!money || money === 0) {\n    return 'n/a';\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'clock']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'money-bill-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon='ticket-alt' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Actor from '../elements/Actor/Actor';\nimport Grid from '../elements/Grid/Grid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Movie = ({ response, loading }) => {\n  const actors = response && response.credits.cast;\n  return (\n    <Page>\n      {response && (\n        <>\n          <MetaTags\n            title={`RMDB - \"${response.title}\"`}\n            desc={response.overview}\n            image={getPosterUrl(response.poster_path)}\n          />\n          <Breadcrumbs title={response.title} />\n          <MovieInfo movie={response} />\n          <MovieInfoBar movie={response} />\n        </>\n      )}\n      {actors && (\n        <Grid header={'Actors'} loading={loading} isActors>\n          {actors.map(actor => (\n            <Actor key={actor.name} actor={actor} />\n          ))}\n        </Grid>\n      )}\n      {loading && <Spinner />}\n      {!actors && !loading && <h1>Not found!</h1>}\n    </Page>\n  );\n};\n\nexport default RMDBService(Movie, 'movie', null, ['credits', 'videos']);\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Grid from '../elements/Grid/Grid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Search = ({\n  loading,\n  movies,\n  currentPage,\n  totalPages,\n  updateItems,\n  searchTerm\n}) => {\n  const title = `Search results for \"${searchTerm}\"`;\n  return (\n    <Page>\n      <MetaTags title={`RMDB - Search: ${searchTerm}`} desc={title} />\n      <SearchBar />\n      <Grid header={title} loading={loading}>\n        {movies.map(el => (\n          <MovieThumb\n            key={el.id}\n            clickable\n            title={el.title}\n            year={el.release_date && el.release_date.slice(0, 4)}\n            image={getPosterUrl(el.poster_path)}\n            movieId={el.id}\n            movieName={el.title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text='Load More' onClick={updateItems} />\n      )}\n    </Page>\n  );\n};\n\nexport default RMDBService(Search, 'search', 'movie');\n","import React from 'react';\nimport { getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb image={getPosterUrl(profile_path)} />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h2>Biography</h2>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genders = [\n  { gen: 'n/a', icon: 'genderless' },\n  { gen: 'Female', icon: 'venus' },\n  { gen: 'Male', icon: 'mars' }\n];\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const ageStr = `${birthday} – ${\n    deathday ? deathday : 'now'\n  } (${age} years old)`;\n  const { gen, icon } = genders[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n          <span className='rmdb-infobar-info'>\n            Age: {birthday ? ageStr : 'n/a'}\n          </span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={icon} size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon='globe' size='2x' />\n          <span className='rmdb-infobar-info'>\n            Place of birth: {place_of_birth ? place_of_birth : 'n/a'}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl, getThumbUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport Grid from '../elements/Grid/Grid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Actor = ({ response, loading }) => {\n  const movies = response && response.movie_credits.cast;\n  return (\n    <Page>\n      {response && (\n        <>\n          <MetaTags\n            title={`RMDB - ${response.name}`}\n            desc={response.biography}\n            image={getPosterUrl(response.profile_path)}\n          />\n          <Breadcrumbs title={response.name} />\n          <ActorInfo actor={response} />\n          <ActorInfoBar actor={response} />\n        </>\n      )}\n      {movies && (\n        <Grid\n          header={`${movies.length} Movies with ${response.name}`}\n          loading={loading}\n        >\n          {movies\n            .sort((a, b) => {\n              return new Date(b.release_date) - new Date(a.release_date);\n            })\n            .map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={getThumbUrl(el.poster_path)}\n                movieId={el.id}\n                gender={response.gender}\n                character={el.character}\n              />\n            ))}\n        </Grid>\n      )}\n      {loading && <Spinner />}\n      {!movies && !loading && <h1>Not found!</h1>}\n    </Page>\n  );\n};\n\nexport default RMDBService(Actor, 'person', null, [\n  'images',\n  'movie_credits',\n  'tv_credits'\n]);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ErrorBoundary from '../ErrorBoundary';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nconst App = () => {\n  return (\n    <ErrorBoundary>\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:id' component={Movie} exact />\n          <Route path='/actor/:id' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faSearch,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt\n} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  fab,\n  faSearch,\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './FAicons';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}