{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","components/elements/MetaTags/MetaTags.js","config.js","components/elements/FourColGrid/FourColGrid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","concat","process","alt","href","target","rel","NotFound","props","onClick","history","goBack","MetaTags","_ref","title","desc","image","Helmet","lang","prefix","name","content","property","document","location","API_URL","API_KEY","NO_IMAGE_URL","getImageUrl","imageSize","isBackdrop","imagePath","noImageUrl","getBackdropUrl","getPosterUrl","getThumbUrl","getProfileUrl","LANG","FourColGrid","children","header","loading","isActors","contentClasses","cn","rmdb-grid-content","rmdb-grid-content-actor","map","el","i","key","HeroImage","text","bgImage","backgroundImage","style","LoadMoreBtn","type","genders","MovieThumb","clickable","year","movieId","gender","character","SearchBar","state","value","timeout","doSearch","_this","setState","clearTimeout","setTimeout","_this$props","callback","trim","push","searchTerm","this","match","params","prevProps","index_es","icon","placeholder","onChange","Component","withRouter","Spinner","Home","movies","heroImage","currentPage","totalPages","createEndpoint","loadMore","popularEP","searchEP","updateItems","Object","toConsumableArray","stateSearchTerm","fetchItems","_callee","endpoint","_this$state","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","results","page","total_pages","t0","console","error","stop","_this$state2","elements_MetaTags_MetaTags","backdrop_path","elements_HeroImage_HeroImage","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","id","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","MovieInfo","movie","_ref$directors","directors","genres","vote_average","genresNames","g","join","min","max","optimum","low","high","length","_ref2","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","size","time","hours","Math","floor","mins","calcTime","Breadcrumbs","Movie","actors","creditsEndpoint","crew","cast","status_code","filter","member","job","localStorage","setItem","JSON","stringify","storedState","getItem","objectSpread","parse","Fragment","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","Search","ActorInfo","_ref$actor","biography","gen","ActorInfoBar","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","ageStr","_genders$gender","actorId","actorEndpoint","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","library","add","fab","faSearch","faCalendarAlt","faClock","faMoneyBillAlt","faTicketAlt","faGenderless","faMars","faVenus","faGlobe","App","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.fe17b5b7.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <a\n          href='https://www.themoviedb.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            className='rmdb-tmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/tmdb_logo.png`}\n            alt='tmdb-logo'\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = props => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n    <button onClick={props.history.goBack}>Go to previous page</button>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst MetaTags = ({ title, desc, image }) => (\n  <Helmet>\n    <html lang='en' prefix='og http://ogp.me/ns#' />\n    <title>{title}</title>\n    <meta name='title' content={title} />\n    <meta name='description' content={desc} />\n    <meta property='og:type' content='website' />\n    <meta property='og:url' content={document.location.href} />\n    <meta property='og:title' content={title} />\n    <meta property='og:description' content={desc} />\n    <meta property='og:image' content={image} />\n    <meta property='og:image:url' content={image} />\n    <meta property='og:image:width' content='500' />\n    <meta property='og:image:height' content='750' />\n    <meta property='og:site_name' content='React Movie' />\n    <meta property='twitter:type' content='website' />\n    <meta property='twitter:url' content={document.location.href} />\n    <meta property='twitter:title' content={title} />\n    <meta property='twitter:description' content={desc} />\n    <meta property='twitter:image' content={image} />\n    <meta property='twitter:image:url' content={image} />\n    <meta property='twitter:image:width' content='500' />\n    <meta property='twitter:image:height' content='750' />\n    <meta property='twitter:site_name' content='React Movie' />\n    <meta property='vk:type' content='website' />\n    <meta property='vk:url' content={document.location.href} />\n    <meta property='vk:title' content={title} />\n    <meta property='vk:description' content={desc} />\n    <meta property='vk:image' content={image} />\n    <meta property='vk:image:url' content={image} />\n    <meta property='vk:image:width' content='500' />\n    <meta property='vk:image:height' content='750' />\n    <meta property='vk:site_name' content='React Movie' />\n    <link rel='image_src' href={image} />\n    <link rel='canonical' href={document.location.href} />\n  </Helmet>\n);\n\nMetaTags.propTypes = {\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default MetaTags;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=844dba0bfd8f3a4f3799f6130ef9e335\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\nconst getImageUrl = (imageSize, isBackdrop) => imagePath => {\n  const noImageUrl = isBackdrop ? '' : NO_IMAGE_URL;\n  return imagePath ? `${IMAGE_BASE_URL}${imageSize}${imagePath}` : noImageUrl;\n};\n\nconst getBackdropUrl = getImageUrl('w1280', true);\nconst getPosterUrl = getImageUrl('w500');\nconst getThumbUrl = getImageUrl('w300');\nconst getProfileUrl = getImageUrl('w154');\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl,\n  getThumbUrl,\n  getProfileUrl\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ children, header, loading, isActors }) => {\n  const renderElements = () =>\n    children &&\n    children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n  const contentClasses = cn({\n    'rmdb-grid-content': true,\n    'rmdb-grid-content-actor': isActors\n  });\n\n  return (\n    <div className='rmdb-grid'>\n      <div className='rmdb-container'>\n        {header && !loading ? <h2>{header}</h2> : null}\n        <div className={contentClasses}>{renderElements()}</div>\n      </div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool,\n  isActors: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  const bgImage = {\n    backgroundImage: `url('${image}')`\n  };\n  return (\n    <div className='rmdb-heroimage' style={bgImage}>\n      <div className='rmdb-heroimage-content rmdb-container'>\n        <div className='rmdb-heroimage-text'>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-container'>\n    <button\n      type='button'\n      className='rmdb-loadmorebtn'\n      onClick={() => onClick(true)}\n    >\n      {text}\n    </button>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst genders = ['Itself', 'Herself', 'Himself'];\n\nconst MovieThumb = ({\n  clickable,\n  image,\n  title,\n  year,\n  movieId,\n  gender,\n  character\n}) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`}>\n          <img src={image} alt={title} />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n            <br />\n            {gender && (\n              <span>Character: {character ? character : genders[gender]}</span>\n            )}\n          </p>\n        </Link>\n      ) : (\n        <img src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  gender: PropTypes.number,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  timeout = null;\n\n  doSearch = ({ target: { value } }) => {\n    this.setState({ value });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      const { callback, history } = this.props;\n      const value = this.state.value.trim();\n      if (value !== '') {\n        callback(false, value);\n        history.push(`/search/${value}`);\n      }\n    }, 1000);\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.props.match.params;\n    searchTerm && this.setState({ value: searchTerm });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (searchTerm && prevProps.match.params.searchTerm !== searchTerm) {\n      this.setState({ value: searchTerm });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({ value: '' });\n  }\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <label className='rmdb-searchbar-label'>\n            <FontAwesomeIcon className='rmdb-searchbar-icon' icon='search' />\n            <span className='visually-hidden'>Search</span>\n            <input\n              type='text'\n              name='search'\n              className='rmdb-searchbar-input'\n              placeholder='Search'\n              onChange={this.doSearch}\n              value={this.state.value}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  };\n\n  componentDidMount() {\n    // const storedState = localStorage.getItem('HomeState');\n    // if (storedState) {\n    //   this.setState({ ...JSON.parse(storedState) });\n    //   return;\n    // }\n    this.setState({ loading: true });\n    this.fetchItems(this.popularEP(false, ''));\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  popularEP = this.createEndpoint('movie/popular');\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(\n          !stateSearchTerm\n            ? this.popularEP(loadMore, '')\n            : this.searchEP(loadMore, stateSearchTerm)\n        );\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, heroImage } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState(\n        {\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        },\n        () => {\n          // if (searchTerm === '') {\n          //   localStorage.setItem('HomeState', JSON.stringify(this.state));\n          // }\n        }\n      );\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, movies, heroImage, currentPage, totalPages } = this.state;\n    return (\n      <div className='rmdb-page'>\n        <MetaTags\n          title={`RMDB - Popular Movies`}\n          desc={'This page is made for'}\n          image={heroImage && getBackdropUrl(heroImage.backdrop_path)}\n        />\n        {heroImage && (\n          <HeroImage\n            image={getBackdropUrl(heroImage.backdrop_path)}\n            title={heroImage.original_title}\n            text={heroImage.overview}\n          />\n        )}\n        <SearchBar callback={this.updateItems} />\n        <FourColGrid header={'Popular Movies'} loading={loading}>\n          {movies.map(el => (\n            <MovieThumb\n              key={el.id}\n              clickable\n              title={el.title}\n              year={el.release_date && el.release_date.slice(0, 4)}\n              image={getPosterUrl(el.poster_path)}\n              movieId={el.id}\n              movieName={el.title}\n            />\n          ))}\n        </FourColGrid>\n        {loading && <Spinner />}\n        {currentPage < totalPages && !loading && (\n          <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../../config';\nimport './Actor.css';\n\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <Link to={`/actor/${actor.id}`} className='rmdb-actor-image'>\n      <img src={getProfileUrl(actor.profile_path)} alt={actor.name} />\n    </Link>\n    <div className='rmdb-actor-info'>\n      <Link to={`/actor/${actor.id}`}>\n        <p className='rmdb-actor-name'>{actor.name}</p>\n      </Link>\n      <p className='rmdb-actor-character'>{actor.character}</p>\n    </div>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport { getBackdropUrl, getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst MovieInfo = ({ movie, directors = [] }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url(${getBackdropUrl(backdrop_path)})`\n  };\n  const genresNames = genres.map(g => g.name).join(', ');\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb image={getPosterUrl(poster_path)} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          <h2>Plot</h2>\n          <p>{overview}</p>\n          <div className='rmdb-info-sections'>\n            <div className='rmdb-info-section'>\n              <h2>Genres</h2>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h2>IMDB rating</h2>\n              <div className='rmdb-rating'>\n                <meter\n                  className='rmdb-rating-scale'\n                  min='0'\n                  max='100'\n                  optimum='100'\n                  low='40'\n                  high='70'\n                  value={vote_average * 10}\n                />\n                <p className='rmdb-rating-score'>{vote_average}</p>\n              </div>\n            </div>\n            <div className='rmdb-info-section'>\n              {directors.length > 1 ? <h2>Directors</h2> : <h2>Director</h2>}\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  if (!time || time === 0) {\n    return 'n/a';\n  }\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  if (!money || money === 0) {\n    return 'n/a';\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'clock']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'money-bill-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon='ticket-alt' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React, { Component } from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\n\nimport { API_URL, API_KEY, LANG, getPosterUrl } from '../../config';\nimport Actor from '../elements/Actor/Actor';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const storedState = localStorage.getItem(`${movieId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the movie...\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result });\n        // ... then fetch actors in the setState cb function\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n        const { crew, cast } = await (await fetch(creditsEndpoint)).json();\n        const directors = crew.filter(member => member.job === 'Director');\n        this.setState(\n          {\n            actors: cast,\n            directors,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { movie, directors, actors, loading } = this.state;\n    return (\n      <main className='rmdb-page'>\n        {movie && (\n          <>\n            <MetaTags\n              title={`RMDB - \"${movie.title}\"`}\n              desc={movie.overview}\n              image={getPosterUrl(movie.poster_path)}\n            />\n            <Breadcrumbs title={movie.title} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar movie={movie} />\n          </>\n        )}\n        {actors && (\n          <FourColGrid header={'Actors'} loading={loading} isActors>\n            {actors.map(actor => (\n              <Actor key={actor.name} actor={actor} />\n            ))}\n          </FourColGrid>\n        )}\n        {loading && <Spinner />}\n        {!actors && !loading && <h1>No movie found!</h1>}\n      </main>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\n\nimport { API_URL, API_KEY, LANG, getPosterUrl } from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Search extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: this.props.match.params.searchTerm || ''\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    document.title = `RMDB - Search: ${searchTerm}`;\n    this.setState({ loading: true });\n    this.fetchItems(this.searchEP(false, searchTerm));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.updateItems(false, searchTerm);\n    }\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(this.searchEP(loadMore, stateSearchTerm));\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState({\n        movies: [...movies, ...result.results],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      });\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, searchTerm, movies, currentPage, totalPages } = this.state;\n    const title = `Search results for \"${searchTerm}\"`;\n    return (\n      <div className='rmdb-page'>\n        <MetaTags\n          title={`RMDB - Search: ${searchTerm}`}\n          desc={title}\n          image={getPosterUrl(movies[0] && movies[0].poster_path)}\n        />\n        <SearchBar callback={this.updateItems} />\n        <FourColGrid header={title} loading={loading}>\n          {movies.map(el => (\n            <MovieThumb\n              key={el.id}\n              clickable\n              title={el.title}\n              year={el.release_date && el.release_date.slice(0, 4)}\n              image={getPosterUrl(el.poster_path)}\n              movieId={el.id}\n              movieName={el.title}\n            />\n          ))}\n        </FourColGrid>\n        {loading && <Spinner />}\n        {currentPage < totalPages && !loading && (\n          <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb image={getPosterUrl(profile_path)} />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h2>Biography</h2>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genders = [\n  { gen: 'n/a', icon: 'genderless' },\n  { gen: 'Female', icon: 'venus' },\n  { gen: 'Male', icon: 'mars' }\n];\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const ageStr = `${birthday} – ${\n    deathday ? deathday : 'now'\n  } (${age} years old)`;\n  const { gen, icon } = genders[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n          <span className='rmdb-infobar-info'>\n            Age: {birthday ? ageStr : 'n/a'}\n          </span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={icon} size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon='globe' size='2x' />\n          <span className='rmdb-infobar-info'>\n            Place of birth: {place_of_birth ? place_of_birth : 'n/a'}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React, { Component } from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getPosterUrl,\n  getThumbUrl\n} from '../../config';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Actor extends Component {\n  state = {\n    actor: null,\n    movies: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    const { actorId } = this.props.match.params;\n    const storedState = localStorage.getItem(`actor_${actorId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the person...\n    const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { actorId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ actor: result });\n        // ... then fetch actors in the setState cb function\n        const actorEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\n        const { cast } = await (await fetch(actorEndpoint)).json();\n        this.setState(\n          {\n            movies: cast,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(\n              `actor_${actorId}`,\n              JSON.stringify(this.state)\n            );\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { actor, movies, loading } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {actor && (\n          <>\n            <MetaTags\n              title={`RMDB - ${actor.name}`}\n              desc={actor.biography}\n              image={getPosterUrl(actor.profile_path)}\n            />\n            <Breadcrumbs title={actor.name} />\n            <ActorInfo actor={actor} />\n            <ActorInfoBar actor={actor} />\n          </>\n        )}\n        {movies && (\n          <FourColGrid\n            header={`${movies.length} Movies with ${actor.name}`}\n            loading={loading}\n          >\n            {movies\n              .sort((a, b) => {\n                return new Date(b.release_date) - new Date(a.release_date);\n              })\n              .map(el => (\n                <MovieThumb\n                  key={el.id}\n                  clickable\n                  title={el.title}\n                  year={el.release_date && el.release_date.slice(0, 4)}\n                  image={getThumbUrl(el.poster_path)}\n                  movieId={el.id}\n                  movieName={el.title}\n                  gender={actor.gender}\n                  character={el.character}\n                />\n              ))}\n          </FourColGrid>\n        )}\n        {loading && <Spinner />}\n        {!movies && !loading && <h1>Not found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Actor;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faSearch,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt\n} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  fab,\n  faSearch,\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe\n);\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:movieId' component={Movie} exact />\n          <Route path='/actor/:actorId' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}