{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/FourColGrid/FourColGrid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","concat","process","alt","NotFound","API_URL","API_KEY","IMAGE_BASE_URL","NO_IMAGE_URL","LANG","FourColGrid","props","header","loading","children","map","el","i","key","HeroImage","_ref","image","title","text","style","background","LoadMoreBtn","onClick","MovieThumb","clickable","movieId","SearchBar","state","value","timeout","doSearch","e","callback","_this","setState","target","clearTimeout","setTimeout","lib_default","name","size","type","placeholder","onChange","this","Component","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","createEndpoint","loadMore","popularEP","searchEP","updateItems","Object","toConsumableArray","stateSearchTerm","fetchItems","_callee","endpoint","_this$state","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","results","page","total_pages","localStorage","setItem","JSON","stringify","t0","console","error","stop","storedState","getItem","objectSpread","parse","_this$state2","gridHeader","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","id","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","MovieInfo","movie","_ref$directors","directors","backgroundImage","min","max","optimum","low","high","vote_average","length","_ref2","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Actor","actor","profile_path","character","Movie","actors","creditsEndpoint","crew","cast","match","params","status_code","filter","member","job","elements_Navigation_Navigation","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","elements_Actor_Actor","App","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5f04d8c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className='rmdb-header'>\n      <div className='rmdb-header-content'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <img\n          className='rmdb-tmdb-logo'\n          src={`${process.env.PUBLIC_URL}/images/tmdb_logo.png`}\n          alt='tmdb-logo'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = props => {\n  const renderElements = () =>\n    props.children &&\n    props.children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n\n  return (\n    <div className='rmdb-grid'>\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className='rmdb-grid-content'>{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div\n    className='rmdb-heroimage'\n    style={{\n      background: `linear-gradient(to bottom, #0000 39%, #0000 41%, #000a 100%), url('${image}'), #1c1c1c`\n    }}\n  >\n    <div className='rmdb-heroimage-content'>\n      <div className='rmdb-heroimage-text'>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-loadmorebtn' onClick={() => onClick(true)}>\n    <p>{text}</p>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ clickable, image, movieId }) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/${movieId}`}>\n          <img src={image} alt='moviethumb' />\n        </Link>\n      ) : (\n        <img src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  timeout = null;\n\n  doSearch = e => {\n    const { callback } = this.props;\n    this.setState({ value: e.target.value });\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      callback(false, this.state.value);\n    }, 750);\n  };\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-searchbar-content'>\n          <FontAwesome className='rmdb-fa-search' name='search' size='2x' />\n          <input\n            type='text'\n            className='rmdb-searchbar-input'\n            placeholder='Search'\n            onChange={this.doSearch}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  };\n\n  componentDidMount() {\n    const storedState = localStorage.getItem('HomeState');\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    this.fetchItems(this.popularEP(false, ''));\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  popularEP = this.createEndpoint('movie/popular');\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(\n          !stateSearchTerm\n            ? this.popularEP(loadMore, '')\n            : this.searchEP(loadMore, stateSearchTerm)\n        );\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, heroImage, searchTerm } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState(\n        {\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        },\n        () => {\n          if (searchTerm === '') {\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        }\n      );\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      searchTerm,\n      movies,\n      heroImage,\n      currentPage,\n      totalPages\n    } = this.state;\n    const gridHeader = searchTerm ? 'Search Result' : 'Popular Movies';\n    return (\n      <div className='rmdb-home'>\n        {heroImage && (\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                heroImage.backdrop_path\n              }`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.updateItems} />\n          </div>\n        )}\n        <div className='rmdb-home-grid'>\n          <FourColGrid header={gridHeader} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = ({ title }) => {\n  return (\n    <div className='rmdb-navigation'>\n      <div className='rmdb-navigation-content'>\n        <Link to='/'>\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{title}</p>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport {\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors = [] }) => {\n  return (\n    <div\n      className='rmdb-movieinfo'\n      style={{\n        backgroundImage: `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n          movie.backdrop_path\n        }')`\n      }}\n    >\n      <div className='rmdb-movieinfo-content'>\n        <div className='rmdb-movieinfo-thumb'>\n          <MovieThumb\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : NO_IMAGE_URL\n            }\n          />\n        </div>\n        <div className='rmdb-movieinfo-text'>\n          <h1>{movie.title}</h1>\n          <h3>Plot</h3>\n          <p>{movie.overview}</p>\n          <h3>IMDB rating</h3>\n          <div className='rmdb-rating'>\n            <meter\n              min='0'\n              max='100'\n              optimum='100'\n              low='40'\n              high='70'\n              value={movie.vote_average * 10}\n            />\n            <p className='rmdb-score'>{movie.vote_average}</p>\n          </div>\n          {directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\n          {directors.map(({ name }) => (\n            <p key={name} className='rmdb-director'>\n              {name}\n            </p>\n          ))}\n        </div>\n        <FontAwesome className='fa-film' name='film' size='5x' />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = ({ movie: { runtime, budget, revenue } }) => (\n  <div className='rmdb-movieinfobar'>\n    <div className='rmdb-movieinfobar-content'>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-time' name='clock-o' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </div>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-budget' name='money' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </div>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-revenue' name='ticket' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL } from '../../../config';\nimport './Actor.css';\n\nconst POSTER_SIZE = 'w154';\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <img\n      src={\n        actor.profile_path\n          ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n          : NO_IMAGE_URL\n      }\n      alt='actorthumb'\n    />\n    <span className='rmdb-actor-name'>{actor.name}</span>\n    <span className='rmdb-actor-character'>{actor.character}</span>\n  </div>\n);\n\nexport default Actor;\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY, LANG } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const storedState = localStorage.getItem(`${movieId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the movie...\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result });\n        // ... then fetch actors in the setState cb function\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n        const { crew, cast } = await (await fetch(creditsEndpoint)).json();\n        const directors = crew.filter(member => member.job === 'Director');\n        this.setState(\n          {\n            actors: cast,\n            directors,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { movie, directors, actors, loading } = this.state;\n    return (\n      <div className='rmdb-movie'>\n        {movie && (\n          <div>\n            <Navigation title={movie.title} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar movie={movie} />\n          </div>\n        )}\n        {actors && (\n          <div className='rmdb-movie-grid'>\n            <FourColGrid header={'Actors'}>\n              {actors.map(actor => (\n                <Actor key={actor.name} actor={actor} />\n              ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!actors && !loading && <h1>No movie found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/:movieId' component={Movie} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}