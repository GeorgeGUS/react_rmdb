{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/FourColGrid/FourColGrid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","concat","process","alt","href","target","rel","NotFound","API_URL","API_KEY","IMAGE_BASE_URL","NO_IMAGE_URL","LANG","FourColGrid","props","header","loading","children","map","el","i","key","HeroImage","_ref","image","title","text","bgImage","backgroundImage","style","LoadMoreBtn","onClick","type","MovieThumb","clickable","year","movieId","SearchBar","state","value","timeout","doSearch","_this$props","_this","callback","history","setState","clearTimeout","setTimeout","trim","push","lib_default","name","size","placeholder","onChange","this","Component","withRouter","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","createEndpoint","loadMore","popularEP","searchEP","updateItems","Object","toConsumableArray","stateSearchTerm","fetchItems","_callee","endpoint","_this$state","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","results","page","total_pages","t0","console","error","stop","_this$state2","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","id","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","character","MovieInfo","movie","_ref$directors","directors","genres","vote_average","poster","genresNames","g","join","min","max","optimum","low","high","length","_ref2","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Breadcrumbs","Movie","actors","creditsEndpoint","crew","cast","match","params","status_code","filter","member","job","localStorage","setItem","JSON","stringify","storedState","getItem","objectSpread","parse","Fragment","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","Search","prevProps","gridHeader","ActorInfo","_ref$actor","biography","genderMap","0","gen","icon","1","2","ActorInfoBar","gender","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","_genderMap$gender","actorId","actorEndpoint","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","App","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.eac2f702.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <a\n          href='https://www.themoviedb.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            className='rmdb-tmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/tmdb_logo.png`}\n            alt='tmdb-logo'\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = props => {\n  const renderElements = () =>\n    props.children &&\n    props.children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n\n  return (\n    <div className='rmdb-grid'>\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className='rmdb-grid-content'>{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  const bgImage = {\n    backgroundImage: `url('${image}')`\n  };\n  return (\n    <div className='rmdb-heroimage' style={bgImage}>\n      <div className='rmdb-heroimage-content rmdb-container'>\n        <div className='rmdb-heroimage-text'>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <button\n    type='button'\n    className='rmdb-loadmorebtn'\n    onClick={() => onClick(true)}\n  >\n    {text}\n  </button>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ clickable, image, title, year, movieId }) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`}>\n          <img src={image} alt='moviethumb' />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n          </p>\n        </Link>\n      ) : (\n        <img src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  timeout = null;\n\n  doSearch = ({ target: { value } }) => {\n    const { callback, history } = this.props;\n\n    this.setState({ value });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      const value = this.state.value.trim();\n      callback(false, value);\n      history.push(`/search/${value}`);\n    }, 750);\n  };\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <label className='rmdb-searchbar-label'>\n            <FontAwesome className='rmdb-fa-search' name='search' size='1x' />\n            <input\n              type='text'\n              className='rmdb-searchbar-input'\n              placeholder='Search'\n              onChange={this.doSearch}\n              value={this.state.value}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  };\n\n  componentDidMount() {\n    // const storedState = localStorage.getItem('HomeState');\n    // if (storedState) {\n    //   this.setState({ ...JSON.parse(storedState) });\n    //   return;\n    // }\n    this.setState({ loading: true });\n    this.fetchItems(this.popularEP(false, ''));\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  popularEP = this.createEndpoint('movie/popular');\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(\n          !stateSearchTerm\n            ? this.popularEP(loadMore, '')\n            : this.searchEP(loadMore, stateSearchTerm)\n        );\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, heroImage } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState(\n        {\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        },\n        () => {\n          // if (searchTerm === '') {\n          //   localStorage.setItem('HomeState', JSON.stringify(this.state));\n          // }\n        }\n      );\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, movies, heroImage, currentPage, totalPages } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {heroImage && (\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n              heroImage.backdrop_path\n            }`}\n            title={heroImage.original_title}\n            text={heroImage.overview}\n          />\n        )}\n        <SearchBar callback={this.updateItems} />\n        <div className='rmdb-container'>\n          <FourColGrid header={'Popular Movies'} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL } from '../../../config';\nimport './Actor.css';\n\nconst POSTER_SIZE = 'w154';\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <Link to={`/actor/${actor.id}`}>\n      <img\n        src={\n          actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n            : NO_IMAGE_URL\n        }\n        alt={actor.name}\n      />\n      <span className='rmdb-actor-name'>{actor.name}</span>\n      <span className='rmdb-actor-character'>{actor.character}</span>\n    </Link>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport {\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst MovieInfo = ({ movie, directors = [] }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop_path}')`\n  };\n  const poster = poster_path\n    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${poster_path}`\n    : NO_IMAGE_URL;\n  const genresNames = genres.map(g => g.name).join(', ');\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb image={poster} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          <h3>Plot</h3>\n          <p>{overview}</p>\n          <div className='rmdb-info-sections'>\n            <div className='rmdb-info-section'>\n              <h3>Genres</h3>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h3>IMDB rating</h3>\n              <div className='rmdb-rating'>\n                <meter\n                  className='rmdb-rating-scale'\n                  min='0'\n                  max='100'\n                  optimum='100'\n                  low='40'\n                  high='70'\n                  value={vote_average * 10}\n                />\n                <p className='rmdb-rating-score'>{vote_average}</p>\n              </div>\n            </div>\n            <div className='rmdb-info-section'>\n              {directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-date' name='calendar' size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-time' name='clock-o' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-budget' name='money' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-revenue' name='ticket' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React, { Component } from 'react';\n\nimport { API_URL, API_KEY, LANG } from '../../config';\nimport Actor from '../elements/Actor/Actor';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const storedState = localStorage.getItem(`${movieId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the movie...\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result });\n        // ... then fetch actors in the setState cb function\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n        const { crew, cast } = await (await fetch(creditsEndpoint)).json();\n        const directors = crew.filter(member => member.job === 'Director');\n        this.setState(\n          {\n            actors: cast,\n            directors,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { movie, directors, actors, loading } = this.state;\n    return (\n      <main className='rmdb-page'>\n        {movie && (\n          <>\n            <Breadcrumbs title={movie.title} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar movie={movie} />\n          </>\n        )}\n        {actors && (\n          <div className='rmdb-container'>\n            <FourColGrid header={'Actors'}>\n              {actors.map(actor => (\n                <Actor key={actor.name} actor={actor} />\n              ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!actors && !loading && <h1>No movie found!</h1>}\n      </main>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Search extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: this.props.match.params.searchTerm || ''\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    this.fetchItems(this.searchEP(false, searchTerm));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.updateItems(false, searchTerm);\n    }\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(this.searchEP(loadMore, stateSearchTerm));\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState({\n        movies: [...movies, ...result.results],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      });\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, searchTerm, movies, currentPage, totalPages } = this.state;\n    const gridHeader = `Search results for \"${searchTerm}\"`;\n    return (\n      <div className='rmdb-page'>\n        <SearchBar callback={this.updateItems} />\n        <div className='rmdb-container'>\n          <FourColGrid header={gridHeader} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL, POSTER_SIZE } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb\n          image={\n            profile_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${profile_path}`\n              : NO_IMAGE_URL\n          }\n        />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h3>Biography</h3>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genderMap = {\n  0: { gen: 'unavailable', icon: 'fa-genderless' },\n  1: { gen: 'woman', icon: 'fa-venus' },\n  2: { gen: 'man', icon: 'fa-mars' }\n};\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const { gen, icon } = genderMap[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        {birthday && (\n          <li className='rmdb-infobar-item'>\n            <FontAwesome className='fa-time' name='calendar' size='2x' />\n            <span className='rmdb-infobar-info'>\n              Age: {birthday} – {deathday ? deathday : 'now'} ({age} years old)\n            </span>\n          </li>\n        )}\n        <li className='rmdb-infobar-item'>\n          <FontAwesome className={icon} name='gender' size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        {place_of_birth && (\n          <li className='rmdb-infobar-item'>\n            <FontAwesome className='fa-globe' name='globe' size='2x' />\n            <span className='rmdb-infobar-info'>\n              Place of birth: {place_of_birth}\n            </span>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE\n} from '../../config';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Actor extends Component {\n  state = {\n    actor: null,\n    movies: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    const { actorId } = this.props.match.params;\n    const storedState = localStorage.getItem(`actor_${actorId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the person...\n    const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { actorId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ actor: result });\n        // ... then fetch actors in the setState cb function\n        const actorEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\n        const { cast } = await (await fetch(actorEndpoint)).json();\n        this.setState(\n          {\n            movies: cast,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(\n              `actor_${actorId}`,\n              JSON.stringify(this.state)\n            );\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { actor, movies, loading } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {actor && (\n          <>\n            <Breadcrumbs title={actor.name} />\n            <ActorInfo actor={actor} />\n            <ActorInfoBar actor={actor} />\n          </>\n        )}\n        {movies && (\n          <div className='rmdb-container'>\n            <FourColGrid header={`Movies with ${actor.name}`} loading={loading}>\n              {movies\n                .sort((a, b) => {\n                  return new Date(b.release_date) - new Date(a.release_date);\n                })\n                .map(el => (\n                  <MovieThumb\n                    key={el.id}\n                    clickable\n                    title={el.title}\n                    year={el.release_date && el.release_date.slice(0, 4)}\n                    image={\n                      el.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                        : NO_IMAGE_URL\n                    }\n                    movieId={el.id}\n                    movieName={el.title}\n                  />\n                ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!movies && !loading && <h1>Not found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Actor;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:movieId' component={Movie} exact />\n          <Route path='/actor/:actorId' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}