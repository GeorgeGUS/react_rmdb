{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/FourColGrid/FourColGrid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Navigation/Navigation.js","components/pages/Movie.js","components/pages/Search.js","components/elements/ActorInfo/ActorInfo.js","components/elements/ActorInfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","concat","process","alt","NotFound","API_URL","API_KEY","IMAGE_BASE_URL","NO_IMAGE_URL","LANG","FourColGrid","props","header","loading","children","map","el","i","key","HeroImage","_ref","image","title","text","style","background","LoadMoreBtn","onClick","MovieThumb","clickable","year","movieId","SearchBar","state","value","timeout","doSearch","target","_this$props","_this","callback","history","setState","clearTimeout","setTimeout","trim","push","lib_default","name","size","type","placeholder","onChange","this","Component","withRouter","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","createEndpoint","loadMore","popularEP","searchEP","updateItems","Object","toConsumableArray","stateSearchTerm","fetchItems","_callee","endpoint","_this$state","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","results","page","total_pages","localStorage","setItem","JSON","stringify","t0","console","error","stop","storedState","getItem","objectSpread","parse","_this$state2","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","id","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","character","MovieInfo","movie","_ref$directors","directors","genres","vote_average","bgImage","backgroundImage","poster","genresNames","g","join","min","max","optimum","low","high","length","_ref2","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Navigation","Movie","actors","creditsEndpoint","crew","cast","match","params","status_code","filter","member","job","elements_Navigation_Navigation","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","elements_Actor_Actor","Search","prevProps","gridHeader","ActorInfo","_ref$actor","biography","Fragment","genderMap","0","gen","icon","1","2","ActorInfoBar","gender","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","_genderMap$gender","actorId","actorEndpoint","elements_ActorInfo_ActorInfo","elements_ActorInfoBar_ActorInfoBar","sort","b","App","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.bb6ba230.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className='rmdb-header'>\n      <div className='rmdb-header-content'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <img\n          className='rmdb-tmdb-logo'\n          src={`${process.env.PUBLIC_URL}/images/tmdb_logo.png`}\n          alt='tmdb-logo'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = props => {\n  const renderElements = () =>\n    props.children &&\n    props.children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n\n  return (\n    <div className='rmdb-grid'>\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className='rmdb-grid-content'>{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div\n    className='rmdb-heroimage'\n    style={{\n      background: `linear-gradient(to bottom, #0000 39%, #0000 41%, #000a 100%), url('${image}'), #1c1c1c`\n    }}\n  >\n    <div className='rmdb-heroimage-content'>\n      <div className='rmdb-heroimage-text'>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-loadmorebtn' onClick={() => onClick(true)}>\n    <p>{text}</p>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ clickable, image, title, year, movieId }) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`}>\n          <img src={image} alt='moviethumb' />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n          </p>\n        </Link>\n      ) : (\n        <img src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  timeout = null;\n\n  doSearch = ({ target: { value } }) => {\n    const { callback, history } = this.props;\n\n    this.setState({ value });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      const value = this.state.value.trim();\n      callback(false, value);\n      history.push(`/search/${value}`);\n    }, 750);\n  };\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-searchbar-content'>\n          <FontAwesome className='rmdb-fa-search' name='search' size='2x' />\n          <input\n            type='text'\n            className='rmdb-searchbar-input'\n            placeholder='Search'\n            onChange={this.doSearch}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  };\n\n  componentDidMount() {\n    const storedState = localStorage.getItem('HomeState');\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    this.fetchItems(this.popularEP(false, ''));\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  popularEP = this.createEndpoint('movie/popular');\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(\n          !stateSearchTerm\n            ? this.popularEP(loadMore, '')\n            : this.searchEP(loadMore, stateSearchTerm)\n        );\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, heroImage, searchTerm } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState(\n        {\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        },\n        () => {\n          if (searchTerm === '') {\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        }\n      );\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, movies, heroImage, currentPage, totalPages } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {heroImage && (\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n              heroImage.backdrop_path\n            }`}\n            title={heroImage.original_title}\n            text={heroImage.overview}\n          />\n        )}\n        <SearchBar callback={this.updateItems} />\n        <div className='rmdb-page-grid'>\n          <FourColGrid header={'Popular Movies'} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL } from '../../../config';\nimport './Actor.css';\n\nconst POSTER_SIZE = 'w154';\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <Link to={`/actor/${actor.id}`}>\n      <img\n        src={\n          actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n            : NO_IMAGE_URL\n        }\n        alt={actor.name}\n      />\n      <span className='rmdb-actor-name'>{actor.name}</span>\n      <span className='rmdb-actor-character'>{actor.character}</span>\n    </Link>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport {\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors = [] }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop_path}')`\n  };\n  const poster = poster_path\n    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${poster_path}`\n    : NO_IMAGE_URL;\n  const genresNames = genres.map(g => g.name).join(', ');\n  return (\n    <div className='rmdb-movieinfo' style={bgImage}>\n      <div className='rmdb-movieinfo-content'>\n        <div className='rmdb-movieinfo-thumb'>\n          <MovieThumb image={poster} />\n        </div>\n        <div className='rmdb-movieinfo-text'>\n          <h1>{title}</h1>\n          <h3>Plot</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresNames}</p>\n          <h3>IMDB rating</h3>\n          <div className='rmdb-rating'>\n            <meter\n              min='0'\n              max='100'\n              optimum='100'\n              low='40'\n              high='70'\n              value={vote_average * 10}\n            />\n            <p className='rmdb-score'>{vote_average}</p>\n          </div>\n          {directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\n          {directors.map(({ name }) => (\n            <p key={name} className='rmdb-director'>\n              {name}\n            </p>\n          ))}\n        </div>\n        <FontAwesome className='fa-film' name='film' size='5x' />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-movieinfobar'>\n    <div className='rmdb-movieinfobar-content'>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-date' name='calendar' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Release date: {release_date}\n        </span>\n      </div>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-time' name='clock-o' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </div>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-budget' name='money' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </div>\n      <div className='rmdb-movieinfobar-col'>\n        <FontAwesome className='fa-revenue' name='ticket' size='2x' />\n        <span className='rmdb-movieinfobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = ({ title }) => {\n  return (\n    <div className='rmdb-navigation'>\n      <div className='rmdb-navigation-content'>\n        <Link to='/'>\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{title}</p>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nimport { API_URL, API_KEY, LANG } from '../../config';\nimport Actor from '../elements/Actor/Actor';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport Navigation from '../elements/Navigation/Navigation';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const storedState = localStorage.getItem(`${movieId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the movie...\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result });\n        // ... then fetch actors in the setState cb function\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n        const { crew, cast } = await (await fetch(creditsEndpoint)).json();\n        const directors = crew.filter(member => member.job === 'Director');\n        this.setState(\n          {\n            actors: cast,\n            directors,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { movie, directors, actors, loading } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {movie && (\n          <div>\n            <Navigation title={movie.title} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar movie={movie} />\n          </div>\n        )}\n        {actors && (\n          <div className='rmdb-page-grid'>\n            <FourColGrid header={'Actors'}>\n              {actors.map(actor => (\n                <Actor key={actor.name} actor={actor} />\n              ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!actors && !loading && <h1>No movie found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Search extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: this.props.match.params.searchTerm || ''\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    this.fetchItems(this.searchEP(false, searchTerm));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.updateItems(false, searchTerm);\n    }\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(this.searchEP(loadMore, stateSearchTerm));\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState({\n        movies: [...movies, ...result.results],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      });\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, searchTerm, movies, currentPage, totalPages } = this.state;\n    const gridHeader = `Search results for \"${searchTerm}\"`;\n    return (\n      <div className='rmdb-page'>\n        <SearchBar callback={this.updateItems} />\n        <div className='rmdb-page-grid'>\n          <FourColGrid header={gridHeader} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL, POSTER_SIZE } from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-movieinfo'>\n    <div className='rmdb-movieinfo-content'>\n      <div className='rmdb-movieinfo-thumb'>\n        <MovieThumb\n          image={\n            profile_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${profile_path}`\n              : NO_IMAGE_URL\n          }\n        />\n      </div>\n      <div className='rmdb-movieinfo-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h3>Biography</h3>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n      <FontAwesome className='fa-film' name='film' size='5x' />\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './MovieInfoBar.css';\n\nconst genderMap = {\n  0: { gen: 'unavailable', icon: 'fa-genderless' },\n  1: { gen: 'woman', icon: 'fa-venus' },\n  2: { gen: 'man', icon: 'fa-mars' }\n};\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const { gen, icon } = genderMap[gender];\n  return (\n    <div className='rmdb-movieinfobar'>\n      <div className='rmdb-movieinfobar-content'>\n        {birthday && (\n          <div className='rmdb-movieinfobar-col'>\n            <FontAwesome className='fa-time' name='calendar' size='2x' />\n            <span className='rmdb-movieinfobar-info'>\n              Age: {birthday} – {deathday ? deathday : 'now'} ({age} years old)\n            </span>\n          </div>\n        )}\n        <div className='rmdb-movieinfobar-col'>\n          <FontAwesome className={icon} name='gender' size='2x' />\n          <span className='rmdb-movieinfobar-info'>Gender: {gen}</span>\n        </div>\n        {place_of_birth && (\n          <div className='rmdb-movieinfobar-col'>\n            <FontAwesome className='fa-globe' name='globe' size='2x' />\n            <span className='rmdb-movieinfobar-info'>\n              Place of birth: {place_of_birth}\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport ActorInfo from '../elements/ActorInfo/ActorInfo';\nimport ActorInfoBar from '../elements/ActorInfoBar/ActorInfoBar';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Actor extends Component {\n  state = {\n    actor: null,\n    movies: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    const { actorId } = this.props.match.params;\n    const storedState = localStorage.getItem(`actor_${actorId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the person...\n    const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { actorId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ actor: result });\n        // ... then fetch actors in the setState cb function\n        const actorEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\n        const { cast } = await (await fetch(actorEndpoint)).json();\n        this.setState(\n          {\n            movies: cast,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(\n              `actor_${actorId}`,\n              JSON.stringify(this.state)\n            );\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { actor, movies, loading } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {actor && (\n          <div>\n            <Navigation title={actor.name} />\n            <ActorInfo actor={actor} />\n            <ActorInfoBar actor={actor} />\n          </div>\n        )}\n        {movies && (\n          <div className='rmdb-page-grid'>\n            <FourColGrid header={`Movies with ${actor.name}`} loading={loading}>\n              {movies\n                .sort((a, b) => {\n                  return new Date(b.release_date) - new Date(a.release_date);\n                })\n                .map(el => (\n                  <MovieThumb\n                    key={el.id}\n                    clickable\n                    title={el.title}\n                    year={el.release_date && el.release_date.slice(0, 4)}\n                    image={\n                      el.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                        : NO_IMAGE_URL\n                    }\n                    movieId={el.id}\n                    movieName={el.title}\n                  />\n                ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!movies && !loading && <h1>Not found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Actor;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:movieId' component={Movie} exact />\n          <Route path='/actor/:actorId' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}