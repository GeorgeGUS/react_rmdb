{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/FourColGrid/FourColGrid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","concat","process","alt","href","target","rel","NotFound","props","onClick","history","goBack","API_URL","API_KEY","NO_IMAGE_URL","getImageUrl","imageSize","isBackdrop","imagePath","noImageUrl","getBackdropUrl","getPosterUrl","getThumbUrl","getProfileUrl","LANG","setMetaTags","title","desc","image","document","url","location","links","propName","prop","content","oldLinks","head","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","link","value","removeChild","err","return","forEach","_ref","setAttribute","dataset","appendChild","FourColGrid","children","header","loading","isActors","contentClasses","cn","rmdb-grid-content","rmdb-grid-content-actor","map","el","i","key","HeroImage","text","bgImage","backgroundImage","style","LoadMoreBtn","type","genders","MovieThumb","clickable","year","movieId","gender","character","SearchBar","state","timeout","doSearch","_this","setState","clearTimeout","setTimeout","_this$props","callback","trim","push","searchTerm","this","match","params","prevProps","index_es","icon","name","placeholder","onChange","Component","withRouter","Spinner","Home","movies","heroImage","currentPage","totalPages","createEndpoint","loadMore","popularEP","searchEP","updateItems","Object","toConsumableArray","stateSearchTerm","fetchItems","_callee","endpoint","_this$state","response","regenerator_default","wrap","_context","prev","fetch","sent","json","results","backdrop_path","page","total_pages","t0","console","error","stop","_this$state2","elements_HeroImage_HeroImage","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","id","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","MovieInfo","movie","_ref$directors","directors","genres","vote_average","genresNames","g","join","min","max","optimum","low","high","length","_ref2","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","size","time","hours","Math","floor","mins","calcTime","Breadcrumbs","Movie","actors","creditsEndpoint","crew","cast","status_code","filter","member","job","storedState","localStorage","getItem","objectSpread","JSON","parse","Fragment","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","Search","ActorInfo","_ref$actor","biography","gen","ActorInfoBar","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","ageStr","_genders$gender","actorId","actorEndpoint","setItem","stringify","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","library","add","fab","faSearch","faCalendarAlt","faClock","faMoneyBillAlt","faTicketAlt","faGenderless","faMars","faVenus","faGlobe","App","elements_Header_Header","react_router","path","component","exact","log","rootElement","getElementById","hasChildNodes","hydrate","components_App_App","render"],"mappings":"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","file":"static/js/main.ca59e053.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <a\n          href='https://www.themoviedb.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            className='rmdb-tmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/tmdb_logo.png`}\n            alt='tmdb-logo'\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = props => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n    <button onClick={props.history.goBack}>Go to previous page</button>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=844dba0bfd8f3a4f3799f6130ef9e335\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\nconst getImageUrl = (imageSize, isBackdrop) => imagePath => {\n  const noImageUrl = isBackdrop ? '' : NO_IMAGE_URL;\n  return imagePath ? `${IMAGE_BASE_URL}${imageSize}${imagePath}` : noImageUrl;\n};\n\nconst getBackdropUrl = getImageUrl('w1280', true);\nconst getPosterUrl = getImageUrl('w500');\nconst getThumbUrl = getImageUrl('w300');\nconst getProfileUrl = getImageUrl('w154');\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nconst setMetaTags = (title, desc, image) => {\n  document.title = title;\n  const url = document.location.href;\n  const links = [\n    { propName: 'name', prop: 'title', content: title },\n    { propName: 'name', prop: 'description', content: desc },\n    { propName: 'property', prop: 'og:type', content: 'website' },\n    { propName: 'property', prop: 'og:url', content: url },\n    { propName: 'property', prop: 'og:title', content: title },\n    { propName: 'property', prop: 'og:description', content: desc },\n    { propName: 'property', prop: 'og:image', content: image },\n    {\n      propName: 'property',\n      prop: 'twitter:card',\n      content: 'summary_large_image'\n    },\n    { propName: 'property', prop: 'twitter:url', content: url },\n    { propName: 'property', prop: 'twitter:title', content: title },\n    { propName: 'property', prop: 'twitter:description', content: desc },\n    { propName: 'property', prop: 'twitter:image', content: image }\n  ];\n  const oldLinks = document.head.querySelectorAll('[data-mt]');\n  for (let link of oldLinks) {\n    document.head.removeChild(link);\n  }\n  links.forEach(({ propName, prop, content }) => {\n    if (content) {\n      const link = document.createElement('meta');\n      link.setAttribute(propName, prop);\n      link.content = content;\n      link.dataset['mt'] = true;\n      document.head.appendChild(link);\n    }\n  });\n};\n\nexport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl,\n  getThumbUrl,\n  getProfileUrl,\n  setMetaTags\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ children, header, loading, isActors }) => {\n  const renderElements = () =>\n    children &&\n    children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n  const contentClasses = cn({\n    'rmdb-grid-content': true,\n    'rmdb-grid-content-actor': isActors\n  });\n\n  return (\n    <div className='rmdb-grid'>\n      <div className='rmdb-container'>\n        {header && !loading ? <h2>{header}</h2> : null}\n        <div className={contentClasses}>{renderElements()}</div>\n      </div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool,\n  isActors: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  const bgImage = {\n    backgroundImage: `url('${image}')`\n  };\n  return (\n    <div className='rmdb-heroimage' style={bgImage}>\n      <div className='rmdb-heroimage-content rmdb-container'>\n        <div className='rmdb-heroimage-text'>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-container'>\n    <button\n      type='button'\n      className='rmdb-loadmorebtn'\n      onClick={() => onClick(true)}\n    >\n      {text}\n    </button>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst genders = ['Itself', 'Herself', 'Himself'];\n\nconst MovieThumb = ({\n  clickable,\n  image,\n  title,\n  year,\n  movieId,\n  gender,\n  character\n}) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`} className='rmdb-moviethumb-wrapper'>\n          <img className='rmdb-moviethumb-image' src={image} alt={title} />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n            <br />\n            {gender && (\n              <span>Character: {character ? character : genders[gender]}</span>\n            )}\n          </p>\n        </Link>\n      ) : (\n        <img className='rmdb-moviethumb-image' src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  gender: PropTypes.number,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  timeout = null;\n\n  doSearch = ({ target: { value } }) => {\n    this.setState({ value });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      const { callback, history } = this.props;\n      const value = this.state.value.trim();\n      if (value !== '') {\n        callback(false, value);\n        history.push(`/search/${value}`);\n      }\n    }, 1000);\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.props.match.params;\n    searchTerm && this.setState({ value: searchTerm });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (searchTerm && prevProps.match.params.searchTerm !== searchTerm) {\n      this.setState({ value: searchTerm });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({ value: '' });\n  }\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <label className='rmdb-searchbar-label'>\n            <FontAwesomeIcon className='rmdb-searchbar-icon' icon='search' />\n            <span className='visually-hidden'>Search</span>\n            <input\n              type='text'\n              name='search'\n              className='rmdb-searchbar-input'\n              placeholder='Search'\n              onChange={this.doSearch}\n              value={this.state.value}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\n// import MetaTags from '../elements/MetaTags/MetaTags';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl,\n  setMetaTags\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  };\n\n  componentDidMount() {\n    // const storedState = localStorage.getItem('HomeState');\n    // if (storedState) {\n    //   this.setState({ ...JSON.parse(storedState) });\n    //   return;\n    // }\n    this.setState({ loading: true });\n    this.fetchItems(this.popularEP(false, ''));\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  popularEP = this.createEndpoint('movie/popular');\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(\n          !stateSearchTerm\n            ? this.popularEP(loadMore, '')\n            : this.searchEP(loadMore, stateSearchTerm)\n        );\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, heroImage } = this.state;\n    try {\n      const response = await (await fetch(endpoint)).json();\n      // Setting meta tags\n      setMetaTags(\n        'RMDB - Popular Movies',\n        'React Movie (or RMDB) is a database for searching information about movies and actors',\n        getBackdropUrl(response.results[0].backdrop_path)\n      );\n      this.setState(\n        {\n          movies: [...movies, ...response.results],\n          heroImage: heroImage || response.results[0],\n          loading: false,\n          currentPage: response.page,\n          totalPages: response.total_pages\n        },\n        () => {\n          // if (searchTerm === '') {\n          //   localStorage.setItem('HomeState', JSON.stringify(this.state));\n          // }\n        }\n      );\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, movies, heroImage, currentPage, totalPages } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {heroImage && (\n          <HeroImage\n            image={getBackdropUrl(heroImage.backdrop_path)}\n            title={heroImage.original_title}\n            text={heroImage.overview}\n          />\n        )}\n        <SearchBar callback={this.updateItems} />\n        <FourColGrid header={'Popular Movies'} loading={loading}>\n          {movies.map(el => (\n            <MovieThumb\n              key={el.id}\n              clickable\n              title={el.title}\n              year={el.release_date && el.release_date.slice(0, 4)}\n              image={getPosterUrl(el.poster_path)}\n              movieId={el.id}\n              movieName={el.title}\n            />\n          ))}\n        </FourColGrid>\n        {loading && <Spinner />}\n        {currentPage < totalPages && !loading && (\n          <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../../config';\nimport './Actor.css';\n\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <Link to={`/actor/${actor.id}`} className='rmdb-actor-image'>\n      <img src={getProfileUrl(actor.profile_path)} alt={actor.name} />\n    </Link>\n    <div className='rmdb-actor-info'>\n      <Link to={`/actor/${actor.id}`}>\n        <p className='rmdb-actor-name'>{actor.name}</p>\n      </Link>\n      <p className='rmdb-actor-character'>{actor.character}</p>\n    </div>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport { getBackdropUrl, getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst MovieInfo = ({ movie, directors = [] }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url(${getBackdropUrl(backdrop_path)})`\n  };\n  const genresNames = genres.map(g => g.name).join(', ');\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb image={getPosterUrl(poster_path)} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          <h2>Plot</h2>\n          <p>{overview}</p>\n          <div className='rmdb-info-sections'>\n            <div className='rmdb-info-section'>\n              <h2>Genres</h2>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h2>IMDB rating</h2>\n              <div className='rmdb-rating'>\n                <meter\n                  className='rmdb-rating-scale'\n                  min='0'\n                  max='100'\n                  optimum='100'\n                  low='40'\n                  high='70'\n                  value={vote_average * 10}\n                />\n                <p className='rmdb-rating-score'>{vote_average}</p>\n              </div>\n            </div>\n            <div className='rmdb-info-section'>\n              {directors.length > 1 ? <h2>Directors</h2> : <h2>Director</h2>}\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  if (!time || time === 0) {\n    return 'n/a';\n  }\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  if (!money || money === 0) {\n    return 'n/a';\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'clock']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'money-bill-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon='ticket-alt' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React, { Component } from 'react';\n// import MetaTags from '../elements/MetaTags/MetaTags';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getPosterUrl,\n  setMetaTags\n} from '../../config';\nimport Actor from '../elements/Actor/Actor';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const storedState = localStorage.getItem(`${movieId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the movie...\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId } = this.props.match.params;\n    try {\n      const response = await (await fetch(endpoint)).json();\n      // Setting meta tags\n      setMetaTags(\n        `RMDB - \"${response.title}\"`,\n        response.overview,\n        getPosterUrl(response.poster_path)\n      );\n      if (response.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: response });\n\n        // ... then fetch actors in the setState cb function\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=${LANG}`;\n        const { crew, cast } = await (await fetch(creditsEndpoint)).json();\n        const directors = crew.filter(member => member.job === 'Director');\n        this.setState(\n          {\n            actors: cast,\n            directors,\n            loading: false\n          },\n          () => {\n            // localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { movie, directors, actors, loading } = this.state;\n    return (\n      <main className='rmdb-page'>\n        {movie && (\n          <>\n            {/* <MetaTags\n              title={`RMDB - \"${movie.title}\"`}\n              desc={movie.overview}\n              image={getPosterUrl(movie.poster_path)}\n            /> */}\n            <Breadcrumbs title={movie.title} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar movie={movie} />\n          </>\n        )}\n        {actors && (\n          <FourColGrid header={'Actors'} loading={loading} isActors>\n            {actors.map(actor => (\n              <Actor key={actor.name} actor={actor} />\n            ))}\n          </FourColGrid>\n        )}\n        {loading && <Spinner />}\n        {!actors && !loading && <h1>No movie found!</h1>}\n      </main>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\n// import MetaTags from '../elements/MetaTags/MetaTags';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getPosterUrl,\n  setMetaTags\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Search extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: this.props.match.params.searchTerm || ''\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    document.title = `RMDB - Search: ${searchTerm}`;\n    this.setState({ loading: true });\n    this.fetchItems(this.searchEP(false, searchTerm));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.updateItems(false, searchTerm);\n    }\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(this.searchEP(loadMore, stateSearchTerm));\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, searchTerm } = this.state;\n    try {\n      const response = await (await fetch(endpoint)).json();\n      setMetaTags(\n        `RMDB - Search: ${searchTerm}`,\n        `Search results for \"${searchTerm}\"`\n      );\n      this.setState({\n        movies: [...movies, ...response.results],\n        loading: false,\n        currentPage: response.page,\n        totalPages: response.total_pages\n      });\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, searchTerm, movies, currentPage, totalPages } = this.state;\n    const title = `Search results for \"${searchTerm}\"`;\n    return (\n      <div className='rmdb-page'>\n        {/* <MetaTags\n          title={`RMDB - Search: ${searchTerm}`}\n          desc={title}\n          image={getPosterUrl(movies[0] && movies[0].poster_path)}\n        /> */}\n        <SearchBar callback={this.updateItems} />\n        <FourColGrid header={title} loading={loading}>\n          {movies.map(el => (\n            <MovieThumb\n              key={el.id}\n              clickable\n              title={el.title}\n              year={el.release_date && el.release_date.slice(0, 4)}\n              image={getPosterUrl(el.poster_path)}\n              movieId={el.id}\n              movieName={el.title}\n            />\n          ))}\n        </FourColGrid>\n        {loading && <Spinner />}\n        {currentPage < totalPages && !loading && (\n          <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb image={getPosterUrl(profile_path)} />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h2>Biography</h2>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genders = [\n  { gen: 'n/a', icon: 'genderless' },\n  { gen: 'Female', icon: 'venus' },\n  { gen: 'Male', icon: 'mars' }\n];\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const ageStr = `${birthday} – ${\n    deathday ? deathday : 'now'\n  } (${age} years old)`;\n  const { gen, icon } = genders[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n          <span className='rmdb-infobar-info'>\n            Age: {birthday ? ageStr : 'n/a'}\n          </span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={icon} size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon='globe' size='2x' />\n          <span className='rmdb-infobar-info'>\n            Place of birth: {place_of_birth ? place_of_birth : 'n/a'}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React, { Component } from 'react';\n// import MetaTags from '../elements/MetaTags/MetaTags';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  getPosterUrl,\n  getThumbUrl,\n  setMetaTags\n} from '../../config';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Actor extends Component {\n  state = {\n    actor: null,\n    movies: null,\n    loading: false\n  };\n\n  componentWillMount() {\n    const { actorId } = this.props.match.params;\n    const storedState = localStorage.getItem(`actor_${actorId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the person...\n    const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { actorId } = this.props.match.params;\n    try {\n      const response = await (await fetch(endpoint)).json();\n      // Setting meta tags\n      setMetaTags(\n        `RMDB - \"${response.name}\"`,\n        response.biography,\n        getPosterUrl(response.profile_path)\n      );\n      if (response.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ actor: response });\n        // ... then fetch actors in the setState cb function\n        const actorEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}&language=${LANG}`;\n        const { cast } = await (await fetch(actorEndpoint)).json();\n        this.setState(\n          {\n            movies: cast,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(\n              `actor_${actorId}`,\n              JSON.stringify(this.state)\n            );\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { actor, movies, loading } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {actor && (\n          <>\n            {/* <MetaTags\n              title={`RMDB - ${actor.name}`}\n              desc={actor.biography}\n              image={getPosterUrl(actor.profile_path)}\n            /> */}\n            <Breadcrumbs title={actor.name} />\n            <ActorInfo actor={actor} />\n            <ActorInfoBar actor={actor} />\n          </>\n        )}\n        {movies && (\n          <FourColGrid\n            header={`${movies.length} Movies with ${actor.name}`}\n            loading={loading}\n          >\n            {movies\n              .sort((a, b) => {\n                return new Date(b.release_date) - new Date(a.release_date);\n              })\n              .map(el => (\n                <MovieThumb\n                  key={el.id}\n                  clickable\n                  title={el.title}\n                  year={el.release_date && el.release_date.slice(0, 4)}\n                  image={getThumbUrl(el.poster_path)}\n                  movieId={el.id}\n                  movieName={el.title}\n                  gender={actor.gender}\n                  character={el.character}\n                />\n              ))}\n          </FourColGrid>\n        )}\n        {loading && <Spinner />}\n        {!movies && !loading && <h1>Not found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Actor;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faSearch,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt\n} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  fab,\n  faSearch,\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe\n);\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Header />\n      <Switch>\n        <Route path='/' component={Home} exact />\n        <Route path='/search/:searchTerm' component={Search} exact />\n        <Route path='/movie/:movieId' component={Movie} exact />\n        <Route path='/actor/:actorId' component={Actor} exact />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { hydrate, render } from 'react-dom';\nimport App from './components/App/App';\nimport 'normalize.css';\nimport './index.css';\nconsole.log('Test static pages');\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst rootElement = document.getElementById('root');\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n"],"sourceRoot":""}