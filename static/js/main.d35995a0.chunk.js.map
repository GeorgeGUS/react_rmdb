{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/FourColGrid/FourColGrid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","concat","process","alt","NotFound","API_URL","API_KEY","IMAGE_BASE_URL","NO_IMAGE_URL","LANG","FourColGrid","props","header","loading","children","map","el","i","key","HeroImage","_ref","image","title","text","style","backgroundImage","LoadMoreBtn","onClick","type","MovieThumb","clickable","year","movieId","SearchBar","state","value","timeout","doSearch","target","_this$props","_this","callback","history","setState","clearTimeout","setTimeout","trim","push","lib_default","name","size","placeholder","onChange","this","Component","withRouter","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","createEndpoint","loadMore","popularEP","searchEP","updateItems","Object","toConsumableArray","stateSearchTerm","fetchItems","_callee","endpoint","_this$state","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","results","page","total_pages","t0","console","error","stop","_this$state2","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","id","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","character","MovieInfo","movie","_ref$directors","directors","genres","vote_average","bgImage","poster","genresNames","g","join","min","max","optimum","low","high","length","_ref2","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Breadcrumbs","Movie","actors","creditsEndpoint","crew","cast","match","params","status_code","filter","member","job","localStorage","setItem","JSON","stringify","storedState","getItem","objectSpread","parse","Fragment","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","Search","prevProps","gridHeader","ActorInfo","_ref$actor","biography","genderMap","0","gen","icon","1","2","ActorInfoBar","gender","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","_genderMap$gender","actorId","actorEndpoint","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","App","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d35995a0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <img\n          className='rmdb-tmdb-logo'\n          src={`${process.env.PUBLIC_URL}/images/tmdb_logo.png`}\n          alt='tmdb-logo'\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = props => {\n  const renderElements = () =>\n    props.children &&\n    props.children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n\n  return (\n    <div className='rmdb-grid'>\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className='rmdb-grid-content'>{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div\n    className='rmdb-heroimage'\n    style={{\n      backgroundImage: `linear-gradient(#0000 40%, #000a), url('${image}')`\n    }}\n  >\n    <div className='rmdb-heroimage-content rmdb-container'>\n      <div className='rmdb-heroimage-text'>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <button\n    type='button'\n    className='rmdb-loadmorebtn'\n    onClick={() => onClick(true)}\n  >\n    {text}\n  </button>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ clickable, image, title, year, movieId }) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`}>\n          <img src={image} alt='moviethumb' />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n          </p>\n        </Link>\n      ) : (\n        <img src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  timeout = null;\n\n  doSearch = ({ target: { value } }) => {\n    const { callback, history } = this.props;\n\n    this.setState({ value });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      const value = this.state.value.trim();\n      callback(false, value);\n      history.push(`/search/${value}`);\n    }, 750);\n  };\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <label className='rmdb-searchbar-label'>\n            <FontAwesome className='rmdb-fa-search' name='search' size='2x' />\n            <input\n              type='text'\n              className='rmdb-searchbar-input'\n              placeholder='Search'\n              onChange={this.doSearch}\n              value={this.state.value}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  };\n\n  componentDidMount() {\n    // const storedState = localStorage.getItem('HomeState');\n    // if (storedState) {\n    //   this.setState({ ...JSON.parse(storedState) });\n    //   return;\n    // }\n    this.setState({ loading: true });\n    this.fetchItems(this.popularEP(false, ''));\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  popularEP = this.createEndpoint('movie/popular');\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(\n          !stateSearchTerm\n            ? this.popularEP(loadMore, '')\n            : this.searchEP(loadMore, stateSearchTerm)\n        );\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies, heroImage } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState(\n        {\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        },\n        () => {\n          // if (searchTerm === '') {\n          //   localStorage.setItem('HomeState', JSON.stringify(this.state));\n          // }\n        }\n      );\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, movies, heroImage, currentPage, totalPages } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {heroImage && (\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n              heroImage.backdrop_path\n            }`}\n            title={heroImage.original_title}\n            text={heroImage.overview}\n          />\n        )}\n        <SearchBar callback={this.updateItems} />\n        <div className='rmdb-container'>\n          <FourColGrid header={'Popular Movies'} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL } from '../../../config';\nimport './Actor.css';\n\nconst POSTER_SIZE = 'w154';\nconst Actor = ({ actor }) => (\n  <div className='rmdb-actor'>\n    <Link to={`/actor/${actor.id}`}>\n      <img\n        src={\n          actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n            : NO_IMAGE_URL\n        }\n        alt={actor.name}\n      />\n      <span className='rmdb-actor-name'>{actor.name}</span>\n      <span className='rmdb-actor-character'>{actor.character}</span>\n    </Link>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport {\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst MovieInfo = ({ movie, directors = [] }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop_path}')`\n  };\n  const poster = poster_path\n    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${poster_path}`\n    : NO_IMAGE_URL;\n  const genresNames = genres.map(g => g.name).join(', ');\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb image={poster} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          <h3>Plot</h3>\n          <p>{overview}</p>\n          <div className='rmdb-info-sections'>\n            <div className='rmdb-info-section'>\n              <h3>Genres</h3>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h3>IMDB rating</h3>\n              <div className='rmdb-rating'>\n                <meter\n                  className='rmdb-rating-scale'\n                  min='0'\n                  max='100'\n                  optimum='100'\n                  low='40'\n                  high='70'\n                  value={vote_average * 10}\n                />\n                <p className='rmdb-rating-score'>{vote_average}</p>\n              </div>\n            </div>\n            <div className='rmdb-info-section'>\n              {directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-date' name='calendar' size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-time' name='clock-o' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-budget' name='money' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesome className='fa-revenue' name='ticket' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React, { Component } from 'react';\n\nimport { API_URL, API_KEY, LANG } from '../../config';\nimport Actor from '../elements/Actor/Actor';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const storedState = localStorage.getItem(`${movieId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the movie...\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result });\n        // ... then fetch actors in the setState cb function\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n        const { crew, cast } = await (await fetch(creditsEndpoint)).json();\n        const directors = crew.filter(member => member.job === 'Director');\n        this.setState(\n          {\n            actors: cast,\n            directors,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { movie, directors, actors, loading } = this.state;\n    return (\n      <main className='rmdb-page'>\n        {movie && (\n          <>\n            <Breadcrumbs title={movie.title} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar movie={movie} />\n          </>\n        )}\n        {actors && (\n          <div className='rmdb-container'>\n            <FourColGrid header={'Actors'}>\n              {actors.map(actor => (\n                <Actor key={actor.name} actor={actor} />\n              ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!actors && !loading && <h1>No movie found!</h1>}\n      </main>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE\n} from '../../config';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Search extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: this.props.match.params.searchTerm || ''\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    this.fetchItems(this.searchEP(false, searchTerm));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.updateItems(false, searchTerm);\n    }\n  }\n\n  createEndpoint = type => (loadMore, searchTerm) =>\n    `${API_URL}${type}?api_key=${API_KEY}&language=${LANG}&page=${loadMore &&\n      this.state.currentPage + 1}&query=${searchTerm}`;\n\n  searchEP = this.createEndpoint('search/movie');\n\n  updateItems = (loadMore, searchTerm) => {\n    this.setState(\n      {\n        movies: loadMore ? [...this.state.movies] : [],\n        loading: true,\n        searchTerm: loadMore ? this.state.searchTerm : searchTerm\n      },\n      () => {\n        const { searchTerm: stateSearchTerm } = this.state;\n        this.fetchItems(this.searchEP(loadMore, stateSearchTerm));\n      }\n    );\n  };\n\n  fetchItems = async endpoint => {\n    const { movies } = this.state;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      this.setState({\n        movies: [...movies, ...result.results],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      });\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { loading, searchTerm, movies, currentPage, totalPages } = this.state;\n    const gridHeader = `Search results for \"${searchTerm}\"`;\n    return (\n      <div className='rmdb-page'>\n        <SearchBar callback={this.updateItems} />\n        <div className='rmdb-container'>\n          <FourColGrid header={gridHeader} loading={loading}>\n            {movies.map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={\n                  el.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                    : NO_IMAGE_URL\n                }\n                movieId={el.id}\n                movieName={el.title}\n              />\n            ))}\n          </FourColGrid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text='Load More' onClick={this.updateItems} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { IMAGE_BASE_URL, NO_IMAGE_URL, POSTER_SIZE } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb\n          image={\n            profile_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${profile_path}`\n              : NO_IMAGE_URL\n          }\n        />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h3>Biography</h3>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genderMap = {\n  0: { gen: 'unavailable', icon: 'fa-genderless' },\n  1: { gen: 'woman', icon: 'fa-venus' },\n  2: { gen: 'man', icon: 'fa-mars' }\n};\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const { gen, icon } = genderMap[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        {birthday && (\n          <li className='rmdb-infobar-item'>\n            <FontAwesome className='fa-time' name='calendar' size='2x' />\n            <span className='rmdb-infobar-info'>\n              Age: {birthday} – {deathday ? deathday : 'now'} ({age} years old)\n            </span>\n          </li>\n        )}\n        <li className='rmdb-infobar-item'>\n          <FontAwesome className={icon} name='gender' size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        {place_of_birth && (\n          <li className='rmdb-infobar-item'>\n            <FontAwesome className='fa-globe' name='globe' size='2x' />\n            <span className='rmdb-infobar-info'>\n              Place of birth: {place_of_birth}\n            </span>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React, { Component } from 'react';\n\nimport {\n  API_URL,\n  API_KEY,\n  LANG,\n  IMAGE_BASE_URL,\n  NO_IMAGE_URL,\n  POSTER_SIZE\n} from '../../config';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './page.css';\n\nclass Actor extends Component {\n  state = {\n    actor: null,\n    movies: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    const { actorId } = this.props.match.params;\n    const storedState = localStorage.getItem(`actor_${actorId}`);\n    if (storedState) {\n      this.setState({ ...JSON.parse(storedState) });\n      return;\n    }\n    this.setState({ loading: true });\n    // Fisrt fetch the person...\n    const endpoint = `${API_URL}person/${actorId}?api_key=${API_KEY}&language=${LANG}`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = async endpoint => {\n    const { actorId } = this.props.match.params;\n    try {\n      const result = await (await fetch(endpoint)).json();\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ actor: result });\n        // ... then fetch actors in the setState cb function\n        const actorEndpoint = `${API_URL}person/${actorId}/movie_credits?api_key=${API_KEY}`;\n        const { cast } = await (await fetch(actorEndpoint)).json();\n        this.setState(\n          {\n            movies: cast,\n            loading: false\n          },\n          () => {\n            localStorage.setItem(\n              `actor_${actorId}`,\n              JSON.stringify(this.state)\n            );\n          }\n        );\n      }\n    } catch (e) {\n      console.error('Fetch error:', e);\n    }\n  };\n\n  render() {\n    const { actor, movies, loading } = this.state;\n    return (\n      <div className='rmdb-page'>\n        {actor && (\n          <>\n            <Breadcrumbs title={actor.name} />\n            <ActorInfo actor={actor} />\n            <ActorInfoBar actor={actor} />\n          </>\n        )}\n        {movies && (\n          <div className='rmdb-container'>\n            <FourColGrid header={`Movies with ${actor.name}`} loading={loading}>\n              {movies\n                .sort((a, b) => {\n                  return new Date(b.release_date) - new Date(a.release_date);\n                })\n                .map(el => (\n                  <MovieThumb\n                    key={el.id}\n                    clickable\n                    title={el.title}\n                    year={el.release_date && el.release_date.slice(0, 4)}\n                    image={\n                      el.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${el.poster_path}`\n                        : NO_IMAGE_URL\n                    }\n                    movieId={el.id}\n                    movieName={el.title}\n                  />\n                ))}\n            </FourColGrid>\n          </div>\n        )}\n        {loading && <Spinner />}\n        {!movies && !loading && <h1>Not found!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default Actor;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:movieId' component={Movie} exact />\n          <Route path='/actor/:actorId' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}