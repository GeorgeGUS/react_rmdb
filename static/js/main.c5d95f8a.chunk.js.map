{"version":3,"sources":["components/elements/Actor/actor.module.css","components/elements/Modal/modal.module.css","components/elements/Rating/rating.module.css","components/elements/Grid/grid.module.css","components/elements/Trailer/trailer.module.css","components/ErrorBoundary.js","components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/MetaTags/MetaTags.js","services/RMDBService.js","components/elements/Page/Page.js","components/elements/Grid/Grid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/LinkBtn/LinkBtn.js","components/elements/Modal/Modal.js","components/elements/Trailer/Trailer.js","components/elements/Rating/Rating.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","FAicons.js","index.js"],"names":["module","exports","card","link","image","info","name","character","overlay","open","content","header","title","wrapper","value","scale","element","player","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","errorInfo","setState","console","componentStack","_this$state","react_default","a","createElement","style","whiteSpace","toString","children","Component","Header","className","react_router_dom","to","src","concat","process","alt","href","target","rel","NotFound","onClick","history","goBack","API_URL","API_KEY","NO_IMAGE_URL","getImageUrl","imageSize","isBackdrop","imagePath","noImageUrl","getBackdropUrl","getPosterUrl","getThumbUrl","getProfileUrl","LANG","MetaTags","_ref","desc","Helmet","lang","property","document","location","RMDBService","Wrapper","queryParams","_Component","_temp","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","movies","response","loading","currentPage","totalPages","searchTerm","match","params","createEndpoint","type","typeId","options","id","_endpoint","fetchItems","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","status_code","results","_ref3","toConsumableArray","page","total_pages","t0","stop","updateItems","loadMore","newSearchTerm","_ref4","inherits","createClass","key","prevProps","assign","Page","Grid","components_ErrorBoundary","styles","map","el","i","HeroImage","text","bgImage","backgroundImage","LoadMoreBtn","genders","MovieThumb","clickable","gender","_ref$movie","movie","poster_path","release_date","year","slice","SearchBar","handleSubmit","e","preventDefault","trim","push","handleInput","selectText","_ref2","select","onSubmit","index_es","icon","placeholder","onFocus","onChange","withRouter","Spinner","heroImage","elements_Page_Page","elements_MetaTags_MetaTags","backdrop_path","elements_HeroImage_HeroImage","original_title","overview","elements_SearchBar_SearchBar","elements_Grid_Grid","elements_MovieThumb_MovieThumb","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","LinkBtn","Modal","OpenBtn","_useState","useState","_useState2","slicedToArray","modalShow","setModalShow","closeModal","onEscPress","keyCode","useEffect","window","addEventListener","removeEventListener","overlayClass","Fragment","openModal","elements_LinkBtn_LinkBtn","size","React","Children","child","cloneElement","Trailer","trailerURL","width","height","frameBorder","allow","allowFullScreen","Rating","min","max","optimum","low","high","MovieInfo","genres","vote_average","credits","videos","trailer","filter","directors","crew","job","genresNames","g","join","elements_Modal_Modal","elements_Trailer_Trailer","elements_Rating_Rating","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Breadcrumbs","actors","cast","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","ActorInfo","_ref$actor","biography","gen","ActorInfoBar","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","ageStr","_genders$gender","movie_credits","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","App","basename","elements_Header_Header","react_router","path","component","Home","exact","Search","Movie","library","add","fab","faSearch","faCalendarAlt","faClock","faMoneyBillAlt","faTicketAlt","faGenderless","faMars","faVenus","faGlobe","faPlay","faTimes","ReactDOM","render","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.c5d95f8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"actor_card__2BMLT\",\"link\":\"actor_link__2VWt1\",\"image\":\"actor_image__1LDhV\",\"info\":\"actor_info__276k4\",\"name\":\"actor_name__38j6_\",\"character\":\"actor_character__2zFIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal_overlay__1cAaC\",\"open\":\"modal_open__Jiylm modal_overlay__1cAaC\",\"content\":\"modal_content__3GjHr\",\"header\":\"modal_header__y566J\",\"title\":\"modal_title__20B77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"rating_wrapper__16Jnq\",\"value\":\"rating_value__2CMCV\",\"scale\":\"rating_scale__2XSJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"grid_content__dY8bQ\",\"element\":\"grid_element__137tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"trailer_player__eej9B\"};","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error, errorInfo });\n    console.error(error, errorInfo.componentStack);\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (error) {\n      return (\n        <div>\n          <h3>Stranger things happen here...</h3>\n          <p>Keep calm, we called El to fix it.</p>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error && error.toString()}\n            {errorInfo && errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <a\n          href='https://www.themoviedb.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            className='rmdb-tmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/movie-db-logo.svg`}\n            alt='tmdb-logo'\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = props => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n    <button onClick={props.history.goBack}>Go to previous page</button>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=844dba0bfd8f3a4f3799f6130ef9e335\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\nconst VIDEO_URL = 'https://www.youtube.com/embed/';\n\nconst getImageUrl = (imageSize, isBackdrop) => imagePath => {\n  const noImageUrl = isBackdrop ? '' : NO_IMAGE_URL;\n  return imagePath ? `${IMAGE_BASE_URL}${imageSize}${imagePath}` : noImageUrl;\n};\n\nconst getBackdropUrl = getImageUrl('w1280', true);\nconst getPosterUrl = getImageUrl('w500');\nconst getThumbUrl = getImageUrl('w300');\nconst getProfileUrl = getImageUrl('w154');\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  VIDEO_URL,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl,\n  getThumbUrl,\n  getProfileUrl\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { LANG } from '../../../config';\n\nconst MetaTags = ({ title, desc, image }) => (\n  <Helmet>\n    <html lang={LANG} />\n    <title>{title}</title>\n    <meta name='title' content={title} />\n    <meta name='description' content={desc} />\n    <meta property='og:type' content='website' />\n    <meta property='og:url' content={document.location.href} />\n    <meta property='og:title' content={title} />\n    <meta property='og:description' content={desc} />\n    <meta property='og:image' content={image} />\n    <meta property='twitter:card' content='summary_large_image' />\n    <meta property='twitter:url' content={document.location.href} />\n    <meta property='twitter:title' content={title} />\n    <meta property='twitter:description' content={desc} />\n    <meta property='twitter:image' content={image} />\n    <link rel='canonical' href={document.location.href} />\n  </Helmet>\n);\n\nMetaTags.propTypes = {\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default MetaTags;\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY, LANG } from '../config';\n\nconst RMDBService = (Wrapper, queryParams) => {\n  return class extends Component {\n    state = {\n      movies: [],\n      response: null,\n      loading: true,\n      currentPage: 1,\n      totalPages: 1,\n      searchTerm: this.props.match.params.searchTerm || ''\n    };\n\n    createEndpoint = ({ type, typeId, options }) => () => {\n      const { id } = this.props.match.params;\n      const { currentPage, searchTerm } = this.state;\n      return `${API_URL}${type}/${typeId ||\n        id}?api_key=${API_KEY}&language=${LANG}&append_to_response=${options}&query=${searchTerm}&page=${currentPage}`;\n    };\n\n    _endpoint = this.createEndpoint(queryParams);\n\n    componentDidMount() {\n      this.fetchItems();\n    }\n\n    componentDidUpdate(prevProps) {\n      const { searchTerm } = this.props.match.params;\n      if (prevProps.match.params.searchTerm !== searchTerm) {\n        this.updateItems(false, searchTerm);\n      }\n    }\n\n    fetchItems = async () => {\n      try {\n        const response = await (await fetch(this._endpoint())).json();\n        if (response.status_code) {\n          this.setState({ loading: false });\n        } else if (response.results) {\n          this.setState(({ movies }) => ({\n            movies: [...movies, ...response.results],\n            loading: false,\n            currentPage: response.page,\n            totalPages: response.total_pages\n          }));\n        } else {\n          this.setState({ response, loading: false });\n        }\n      } catch (e) {\n        console.error('Fetch error:', e);\n      }\n    };\n\n    updateItems = (loadMore, newSearchTerm) => {\n      this.setState(\n        ({ movies, searchTerm, currentPage }) => ({\n          movies: loadMore ? [...movies] : [],\n          loading: true,\n          searchTerm: loadMore ? searchTerm : newSearchTerm,\n          currentPage: loadMore ? currentPage + 1 : 1\n        }),\n        this.fetchItems\n      );\n    };\n\n    render() {\n      return (\n        <Wrapper\n          {...this.state}\n          {...this.props}\n          updateItems={this.updateItems}\n        />\n      );\n    }\n  };\n};\n\nexport default RMDBService;\n","import React from 'react';\nimport './Page.css';\n\nconst Page = ({ children }) => {\n  return <main className='rmdb-page'>{children}</main>;\n};\n\nexport default Page;\n","import React from 'react';\nimport ErrorBoundary from '../../ErrorBoundary';\nimport styles from './grid.module.css';\n\nconst Grid = ({ children, title }) => (\n  <ErrorBoundary>\n    <section className='rmdb-grid'>\n      <div className='rmdb-container'>\n        <h2>{title}</h2>\n        <div className={styles.content}>\n          {children.map((el, i) => (\n            <div key={i} className={styles.element}>\n              {el}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  </ErrorBoundary>\n);\n\nexport default Grid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  const bgImage = {\n    backgroundImage: `url('${image}')`\n  };\n  return (\n    <div className='rmdb-heroimage' style={bgImage}>\n      <div className='rmdb-heroimage-content rmdb-container'>\n        <div className='rmdb-heroimage-text'>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-container'>\n    <button\n      type='button'\n      className='rmdb-loadmorebtn'\n      onClick={() => onClick(true)}\n    >\n      {text}\n    </button>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getThumbUrl } from '../../../config';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst genders = ['Unknown', 'Herself', 'Himself'];\n\nconst MovieThumb = ({ clickable, gender, movie = {}, imagePath }) => {\n  const { id, title, poster_path, character, release_date } = movie;\n  const image = getThumbUrl(poster_path || imagePath);\n  const year = release_date && release_date.slice(0, 4);\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${id}`} className='rmdb-moviethumb-wrapper'>\n          <img className='rmdb-moviethumb-image' src={image} alt={title} />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n            <br />\n            {gender && (\n              <span>Character: {character ? character : genders[gender]}</span>\n            )}\n          </p>\n        </Link>\n      ) : (\n        <img className='rmdb-moviethumb-image' src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  movie: PropTypes.object,\n  imagePath: PropTypes.string,\n  gender: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const value = this.state.value.trim();\n    const { searchTerm } = this.props.match.params;\n    if (value !== '' && value !== searchTerm) {\n      this.props.history.push(`/search/${value}`);\n    }\n  };\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n  selectText = ({ target }) => {\n    target.select();\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.props.match.params;\n    searchTerm && this.setState({ value: searchTerm });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.setState({ value: searchTerm });\n    }\n  }\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <form className='rmdb-searchbar-form' onSubmit={this.handleSubmit}>\n            <label className='rmdb-searchbar-label'>\n              <FontAwesomeIcon className='rmdb-searchbar-icon' icon='search' />\n              <span className='visually-hidden'>Search</span>\n              <input\n                type='text'\n                name='search'\n                className='rmdb-searchbar-input'\n                placeholder='Search'\n                onFocus={this.selectText}\n                onChange={this.handleInput}\n                value={this.state.value}\n              />\n            </label>\n            <button className='rmdb-searchbar-submit'>Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getBackdropUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Grid from '../elements/Grid/Grid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Home = ({ loading, movies, currentPage, totalPages, updateItems }) => {\n  const heroImage = movies.length > 0 ? movies[0] : {};\n  return (\n    <Page>\n      <MetaTags\n        title={'RMDB - Popular Movies'}\n        desc={\n          'React Movie (or RMDB) is a database for searching information about movies and actors'\n        }\n        image={getBackdropUrl(heroImage.backdrop_path)}\n      />\n      <HeroImage\n        image={getBackdropUrl(heroImage.backdrop_path)}\n        title={heroImage.original_title}\n        text={heroImage.overview}\n      />\n      <SearchBar />\n      <Grid title={'Popular Movies'}>\n        {movies.map(movie => (\n          <MovieThumb key={movie.id} clickable movie={movie} />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text='Load More' onClick={updateItems} />\n      )}\n    </Page>\n  );\n};\n\nconst queryParams = {\n  type: 'movie',\n  typeId: 'popular'\n};\n\nexport default RMDBService(Home, queryParams);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../../config';\nimport styles from './actor.module.css';\n\nconst Actor = ({ actor }) => (\n  <div className={styles.card}>\n    <Link to={`/actor/${actor.id}`} className={styles.image}>\n      <img src={getProfileUrl(actor.profile_path)} alt={actor.name} />\n    </Link>\n    <div className={styles.info}>\n      <Link to={`/actor/${actor.id}`} className={styles.link}>\n        <p className={styles.name}>{actor.name}</p>\n      </Link>\n      <p className={styles.character}>{actor.character}</p>\n    </div>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport './LinkBtn.css';\n\nconst LinkBtn = ({ children, onClick }) => {\n  return (\n    <button type='button' className='rmdb-link-btn' onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default LinkBtn;\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport LinkBtn from '../LinkBtn/LinkBtn';\nimport styles from './modal.module.css';\n\nconst Modal = ({ children, title, OpenBtn }) => {\n  const [modalShow, setModalShow] = useState(false);\n  const openModal = () => setModalShow(true);\n  const closeModal = () => setModalShow(false);\n  const onOverlayClick = e =>\n    e.target.className === overlayClass ? closeModal() : null;\n  const onEscPress = e => (e.keyCode === 27 && modalShow ? closeModal() : null);\n\n  useEffect(() => {\n    window.addEventListener('keydown', onEscPress);\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n  });\n\n  const overlayClass = modalShow ? styles.open : styles.overlay;\n\n  return (\n    <>\n      <OpenBtn openModal={openModal} />\n      {modalShow && (\n        <div className={overlayClass} onClick={onOverlayClick}>\n          <section className={styles.content}>\n            <div className={styles.header}>\n              <h2 className={styles.title}>{title}</h2>\n              <LinkBtn onClick={closeModal}>\n                <FontAwesomeIcon icon='times' size='1x' />\n                <span className='visually-hidden'>close</span>\n              </LinkBtn>\n            </div>\n            {React.Children.map(children, child =>\n              React.cloneElement(child, { closeModal })\n            )}\n          </section>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { player } from './trailer.module.css';\n\nconst Trailer = ({ title, trailerURL }) => {\n  return (\n    <iframe\n      className={player}\n      title={`${title} - Official Trailer`}\n      width='560'\n      height='315'\n      src={trailerURL}\n      frameBorder='0'\n      allow='accelerometer; autoplay; encrypted-media; gyroscope'\n      allowFullScreen\n    />\n  );\n};\n\nexport default Trailer;\n","import React from 'react';\nimport styles from './rating.module.css';\n\nconst Rating = ({ value }) => {\n  return (\n    <div className={styles.wrapper}>\n      <meter\n        className={styles.scale}\n        min='0'\n        max='100'\n        optimum='100'\n        low='40'\n        high='70'\n        value={value * 10}\n      />\n      <p className={styles.value}>{value}</p>\n    </div>\n  );\n};\n\nexport default Rating;\n","import React from 'react';\nimport { VIDEO_URL, getBackdropUrl } from '../../../config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport Modal from '../Modal/Modal';\nimport Trailer from '../Trailer/Trailer';\nimport LinkBtn from '../LinkBtn/LinkBtn';\nimport Rating from '../Rating/Rating';\n\nimport './Info.css';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average,\n    credits,\n    videos\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url(${getBackdropUrl(backdrop_path)})`\n  };\n  const trailer =\n    videos.results.length > 0 &&\n    videos.results.filter(({ type }) => type === 'Trailer')[0];\n  const trailerURL = trailer ? `${VIDEO_URL}${trailer.key}` : null;\n  const directors = credits.crew.filter(crew => crew.job === 'Director');\n  const genresNames = genres.map(g => g.name).join(', ');\n\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb imagePath={poster_path} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          {trailerURL && (\n            <Modal\n              title={'Play Trailer'}\n              OpenBtn={({ openModal }) => (\n                <LinkBtn onClick={openModal}>\n                  <FontAwesomeIcon icon='play' size='1x' /> Play trailer\n                </LinkBtn>\n              )}\n            >\n              <Trailer trailerURL={trailerURL} title={title} />\n            </Modal>\n          )}\n          <div className='rmdb-info-section'>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </div>\n          <div className='rmdb-info-footer'>\n            <div className='rmdb-info-section'>\n              <h2>Genres</h2>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h2>IMDB rating</h2>\n              <Rating value={vote_average} />\n            </div>\n            <div className='rmdb-info-section'>\n              <h2>{directors.length > 1 ? 'Directors' : 'Director'}</h2>\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  if (!time || time === 0) {\n    return 'n/a';\n  }\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  if (!money || money === 0) {\n    return 'n/a';\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'clock']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'money-bill-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon='ticket-alt' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Actor from '../elements/Actor/Actor';\nimport Grid from '../elements/Grid/Grid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Movie = ({ response, loading }) => {\n  const actors = response && response.credits && response.credits.cast;\n  return (\n    <Page>\n      {response && (\n        <>\n          <MetaTags\n            title={`RMDB - \"${response.title}\"`}\n            desc={response.overview}\n            image={getPosterUrl(response.poster_path)}\n          />\n          <Breadcrumbs title={response.title} />\n          <MovieInfo movie={response} />\n          <MovieInfoBar movie={response} />\n        </>\n      )}\n      {actors && (\n        <Grid title={'Actors'}>\n          {actors.map(actor => (\n            <Actor key={actor.name} actor={actor} />\n          ))}\n        </Grid>\n      )}\n      {loading && <Spinner />}\n      {!actors && !loading && <h1>Not found!</h1>}\n    </Page>\n  );\n};\n\nconst queryParams = {\n  type: 'movie',\n  options: ['credits', 'videos']\n};\n\nexport default RMDBService(Movie, queryParams);\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport Page from '../elements/Page/Page';\nimport Grid from '../elements/Grid/Grid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Search = ({\n  loading,\n  movies,\n  currentPage,\n  totalPages,\n  updateItems,\n  searchTerm\n}) => {\n  const title = `Search results for \"${searchTerm}\"`;\n  return (\n    <Page>\n      <MetaTags title={`RMDB - Search: ${searchTerm}`} desc={title} />\n      <SearchBar />\n      <Grid title={title}>\n        {movies.map(movie => (\n          <MovieThumb key={movie.id} clickable movie={movie} />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text='Load More' onClick={updateItems} />\n      )}\n    </Page>\n  );\n};\n\nconst queryParams = {\n  type: 'search',\n  typeId: 'movie'\n};\n\nexport default RMDBService(Search, queryParams);\n","import React from 'react';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb imagePath={profile_path} />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <div className='rmdb-info-section'>\n            <h2>Biography</h2>\n            <p>{biography}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genders = [\n  { gen: 'n/a', icon: 'genderless' },\n  { gen: 'Female', icon: 'venus' },\n  { gen: 'Male', icon: 'mars' }\n];\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const ageStr = `${birthday} – ${\n    deathday ? deathday : 'now'\n  } (${age} years old)`;\n  const { gen, icon } = genders[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n          <span className='rmdb-infobar-info'>\n            Age: {birthday ? ageStr : 'n/a'}\n          </span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={icon} size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon='globe' size='2x' />\n          <span className='rmdb-infobar-info'>\n            Place of birth: {place_of_birth ? place_of_birth : 'n/a'}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport Grid from '../elements/Grid/Grid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Actor = ({ response, loading }) => {\n  const movies =\n    response && response.movie_credits && response.movie_credits.cast;\n  return (\n    <Page>\n      {response && (\n        <>\n          <MetaTags\n            title={`RMDB - ${response.name}`}\n            desc={response.biography}\n            image={getPosterUrl(response.profile_path)}\n          />\n          <Breadcrumbs title={response.name} />\n          <ActorInfo actor={response} />\n          <ActorInfoBar actor={response} />\n        </>\n      )}\n      {movies && (\n        <Grid title={`${movies.length} Movies with ${response.name}`}>\n          {movies\n            .sort((a, b) => {\n              return new Date(b.release_date) - new Date(a.release_date);\n            })\n            .map(movie => (\n              <MovieThumb\n                key={movie.id}\n                clickable\n                movie={movie}\n                gender={response.gender}\n              />\n            ))}\n        </Grid>\n      )}\n      {loading && <Spinner />}\n      {!movies && !loading && <h1>Not found!</h1>}\n    </Page>\n  );\n};\n\nconst queryParams = {\n  type: 'person',\n  options: ['images', 'movie_credits', 'tv_credits']\n};\n\nexport default RMDBService(Actor, queryParams);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ErrorBoundary from '../ErrorBoundary';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nconst App = () => {\n  return (\n    <ErrorBoundary>\n      <BrowserRouter basename='/react_rmdb'>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:id' component={Movie} exact />\n          <Route path='/actor/:id' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faSearch,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe,\n  faPlay,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt\n} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  fab,\n  faSearch,\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe,\n  faPlay,\n  faTimes\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './FAicons';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}