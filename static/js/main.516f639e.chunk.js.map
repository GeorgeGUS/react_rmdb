{"version":3,"sources":["components/elements/Actor/actor.module.css","components/elements/Modal/modal.module.css","components/elements/Trailer/trailer.module.css","components/ErrorBoundary.js","components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/MetaTags/MetaTags.js","services/RMDBService.js","components/elements/Page/Page.js","components/elements/Grid/Grid.js","components/elements/HeroImage/HeroImage.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/SearchBar/SearchBar.js","components/elements/Spinner/Spinner.js","components/pages/Home.js","components/elements/Actor/Actor.js","components/elements/LinkBtn/LinkBtn.js","components/elements/Modal/Modal.js","components/elements/Trailer/Trailer.js","components/elements/Info/MovieInfo.js","helpers.js","components/elements/InfoBar/MovieInfoBar.js","components/elements/Breadcrumbs/Breadcrumbs.js","components/pages/Movie.js","components/pages/Search.js","components/elements/Info/ActorInfo.js","components/elements/InfoBar/ActorInfoBar.js","components/pages/Actor.js","components/App/App.js","FAicons.js","index.js"],"names":["module","exports","card","link","image","info","name","character","overlay","open","content","header","player","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","errorInfo","setState","console","componentStack","_this$state","react_default","a","createElement","style","whiteSpace","toString","children","Component","Header","className","react_router_dom","to","src","concat","process","alt","href","target","rel","NotFound","onClick","history","goBack","API_URL","API_KEY","NO_IMAGE_URL","getImageUrl","imageSize","isBackdrop","imagePath","noImageUrl","getBackdropUrl","getPosterUrl","getThumbUrl","getProfileUrl","LANG","MetaTags","_ref","title","desc","Helmet","lang","property","document","location","RMDBService","Wrapped","_len","arguments","length","queryProps","Array","_key","_Component","_temp","_getPrototypeOf2","_this2","_len2","args","_key2","apply","movies","response","loading","currentPage","totalPages","searchTerm","match","params","createEndpoint","type","typeId","options","id","_endpoint","fetchItems","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","sent","json","status_code","results","_ref2","toConsumableArray","page","total_pages","t0","stop","updateItems","loadMore","newSearchTerm","_ref3","inherits","createClass","key","value","prevProps","assign","Page","Grid","isActors","contentClasses","cn","rmdb-grid-content","rmdb-grid-content-actor","components_ErrorBoundary","map","el","i","HeroImage","text","bgImage","backgroundImage","LoadMoreBtn","genders","MovieThumb","clickable","year","movieId","gender","SearchBar","handleSubmit","e","preventDefault","trim","push","handleInput","selectText","select","onSubmit","index_es","icon","placeholder","onFocus","onChange","withRouter","Spinner","heroImage","elements_Page_Page","elements_MetaTags_MetaTags","backdrop_path","elements_HeroImage_HeroImage","original_title","overview","elements_SearchBar_SearchBar","elements_Grid_Grid","elements_MovieThumb_MovieThumb","release_date","slice","poster_path","movieName","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","styles","profile_path","LinkBtn","Modal","show","onClose","overlayClass","useEffect","onEscPress","keyCode","window","addEventListener","removeEventListener","elements_LinkBtn_LinkBtn","size","Trailer","trailerURL","width","height","frameBorder","allow","allowFullScreen","MovieInfo","movie","genres","vote_average","credits","videos","trailerId","filter","directors","crew","job","genresNames","g","join","_useState","useState","_useState2","slicedToArray","modalOpen","setModalOpen","changeModalOpen","bool","elements_Modal_Modal","elements_Trailer_Trailer","min","max","optimum","low","high","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","_ref$movie","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Breadcrumbs","actors","cast","Fragment","elements_Breadcrumbs_Breadcrumbs","Info_MovieInfo","InfoBar_MovieInfoBar","elements_Actor_Actor","ActorInfo","_ref$actor","biography","gen","ActorInfoBar","birthday","deathday","place_of_birth","age","birthString","deathString","deathDate","Date","birthDate","getFullYear","m","getMonth","getDate","getAge","ageStr","_genders$gender","movie_credits","Info_ActorInfo","InfoBar_ActorInfoBar","sort","b","App","elements_Header_Header","react_router","path","component","Home","exact","Search","Movie","library","add","fab","faSearch","faCalendarAlt","faClock","faMoneyBillAlt","faTicketAlt","faGenderless","faMars","faVenus","faGlobe","faPlay","faTimes","ReactDOM","render","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.516f639e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"actor_card__2BMLT\",\"link\":\"actor_link__2VWt1\",\"image\":\"actor_image__1LDhV\",\"info\":\"actor_info__276k4\",\"name\":\"actor_name__38j6_\",\"character\":\"actor_character__2zFIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal_overlay__1cAaC\",\"open\":\"modal_open__Jiylm modal_overlay__1cAaC\",\"content\":\"modal_content__3GjHr\",\"header\":\"modal_header__y566J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"trailer_player__eej9B\"};","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error, errorInfo });\n    console.error(error, errorInfo.componentStack);\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (error) {\n      return (\n        <div>\n          <h3>Stranger things happen here...</h3>\n          <p>Keep calm, we called El to fix it.</p>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error && error.toString()}\n            {errorInfo && errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='rmdb-header'>\n      <div className='rmdb-header-content rmdb-container'>\n        <Link to='/'>\n          <img\n            className='rmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/reactMovie_logo.png`}\n            alt='rmdb-logo'\n          />\n        </Link>\n        <a\n          href='https://www.themoviedb.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            className='rmdb-tmdb-logo'\n            src={`${process.env.PUBLIC_URL}/images/movie-db-logo.svg`}\n            alt='tmdb-logo'\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst NotFound = props => (\n  <div>\n    <h1>Whoooops. This page doesn't exist...</h1>\n    <button onClick={props.history.goBack}>Go to previous page</button>\n  </div>\n);\n\nexport default NotFound;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=844dba0bfd8f3a4f3799f6130ef9e335\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst NO_IMAGE_URL = `${process.env.PUBLIC_URL}/images/no_image.jpg`;\n\nconst VIDEO_URL = 'https://www.youtube.com/embed/';\n\nconst getImageUrl = (imageSize, isBackdrop) => imagePath => {\n  const noImageUrl = isBackdrop ? '' : NO_IMAGE_URL;\n  return imagePath ? `${IMAGE_BASE_URL}${imageSize}${imagePath}` : noImageUrl;\n};\n\nconst getBackdropUrl = getImageUrl('w1280', true);\nconst getPosterUrl = getImageUrl('w500');\nconst getThumbUrl = getImageUrl('w300');\nconst getProfileUrl = getImageUrl('w154');\n\n// const LANG = 'ru-RU';\nconst LANG = 'en-US';\n\nexport {\n  API_URL,\n  API_KEY,\n  VIDEO_URL,\n  LANG,\n  getBackdropUrl,\n  getPosterUrl,\n  getThumbUrl,\n  getProfileUrl\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { LANG } from '../../../config';\n\nconst MetaTags = ({ title, desc, image }) => (\n  <Helmet>\n    <html lang={LANG} />\n    <title>{title}</title>\n    <meta name='title' content={title} />\n    <meta name='description' content={desc} />\n    <meta property='og:type' content='website' />\n    <meta property='og:url' content={document.location.href} />\n    <meta property='og:title' content={title} />\n    <meta property='og:description' content={desc} />\n    <meta property='og:image' content={image} />\n    <meta property='twitter:card' content='summary_large_image' />\n    <meta property='twitter:url' content={document.location.href} />\n    <meta property='twitter:title' content={title} />\n    <meta property='twitter:description' content={desc} />\n    <meta property='twitter:image' content={image} />\n    <link rel='canonical' href={document.location.href} />\n  </Helmet>\n);\n\nMetaTags.propTypes = {\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default MetaTags;\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY, LANG } from '../config';\n\nconst RMDBService = (Wrapped, ...queryProps) => {\n  return class extends Component {\n    state = {\n      movies: [],\n      response: null,\n      loading: true,\n      currentPage: 1,\n      totalPages: 1,\n      searchTerm: this.props.match.params.searchTerm || ''\n    };\n\n    createEndpoint = (type, typeId, options) => () => {\n      const { id } = this.props.match.params;\n      const { currentPage, searchTerm } = this.state;\n      return `${API_URL}${type}/${typeId ||\n        id}?api_key=${API_KEY}&language=${LANG}&append_to_response=${options}&query=${searchTerm}&page=${currentPage}`;\n    };\n\n    _endpoint = this.createEndpoint(...queryProps);\n\n    componentDidMount() {\n      this.fetchItems();\n    }\n\n    componentDidUpdate(prevProps) {\n      const { searchTerm } = this.props.match.params;\n      if (prevProps.match.params.searchTerm !== searchTerm) {\n        this.updateItems(false, searchTerm);\n      }\n    }\n\n    fetchItems = async () => {\n      try {\n        const response = await (await fetch(this._endpoint())).json();\n        if (response.status_code) {\n          this.setState({ loading: false });\n        } else if (response.results) {\n          this.setState(({ movies }) => ({\n            movies: [...movies, ...response.results],\n            loading: false,\n            currentPage: response.page,\n            totalPages: response.total_pages\n          }));\n        } else {\n          this.setState({ response, loading: false });\n        }\n      } catch (e) {\n        console.error('Fetch error:', e);\n      }\n    };\n\n    updateItems = (loadMore, newSearchTerm) => {\n      this.setState(\n        ({ movies, searchTerm, currentPage }) => ({\n          movies: loadMore ? [...movies] : [],\n          loading: true,\n          searchTerm: loadMore ? searchTerm : newSearchTerm,\n          currentPage: loadMore ? currentPage + 1 : 1\n        }),\n        this.fetchItems\n      );\n    };\n\n    render() {\n      return (\n        <Wrapped\n          {...this.state}\n          {...this.props}\n          updateItems={this.updateItems}\n        />\n      );\n    }\n  };\n};\n\nexport default RMDBService;\n","import React from 'react';\nimport './Page.css';\n\nconst Page = ({ children }) => {\n  return <main className='rmdb-page'>{children}</main>;\n};\n\nexport default Page;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport ErrorBoundary from '../../ErrorBoundary';\nimport './Grid.css';\n\nconst Grid = ({ children, header, loading, isActors }) => {\n  const renderElements = () =>\n    children &&\n    children.map((el, i) => (\n      <div key={i} className='rmdb-grid-element'>\n        {el}\n      </div>\n    ));\n  const contentClasses = cn({\n    'rmdb-grid-content': true,\n    'rmdb-grid-content-actor': isActors\n  });\n\n  return (\n    <ErrorBoundary>\n      <div className='rmdb-grid'>\n        <div className='rmdb-container'>\n          {header && !loading && <h2>{header}</h2>}\n          <div className={contentClasses}>{renderElements()}</div>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool,\n  isActors: PropTypes.bool\n};\n\nexport default Grid;\n","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  const bgImage = {\n    backgroundImage: `url('${image}')`\n  };\n  return (\n    <div className='rmdb-heroimage' style={bgImage}>\n      <div className='rmdb-heroimage-content rmdb-container'>\n        <div className='rmdb-heroimage-text'>\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className='rmdb-container'>\n    <button\n      type='button'\n      className='rmdb-loadmorebtn'\n      onClick={() => onClick(true)}\n    >\n      {text}\n    </button>\n  </div>\n);\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst genders = ['Itself', 'Herself', 'Himself'];\n\nconst MovieThumb = ({\n  clickable,\n  image,\n  title,\n  year,\n  movieId,\n  gender,\n  character\n}) => {\n  return (\n    <div className='rmdb-moviethumb'>\n      {clickable ? (\n        <Link to={`/movie/${movieId}`} className='rmdb-moviethumb-wrapper'>\n          <img className='rmdb-moviethumb-image' src={image} alt={title} />\n          <p className='rmdb-moviethumb-title'>\n            “{title}”{year ? `, ${year}` : ''}\n            <br />\n            {gender && (\n              <span>Character: {character ? character : genders[gender]}</span>\n            )}\n          </p>\n        </Link>\n      ) : (\n        <img className='rmdb-moviethumb-image' src={image} alt='moviethumb' />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  gender: PropTypes.number,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default MovieThumb;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const value = this.state.value.trim();\n    const { searchTerm } = this.props.match.params;\n    if (value !== '' && value !== searchTerm) {\n      this.props.history.push(`/search/${value}`);\n    }\n  };\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n  selectText = ({ target }) => {\n    target.select();\n  };\n\n  componentDidMount() {\n    const { searchTerm } = this.props.match.params;\n    searchTerm && this.setState({ value: searchTerm });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { searchTerm } = this.props.match.params;\n    if (prevProps.match.params.searchTerm !== searchTerm) {\n      this.setState({ value: searchTerm });\n    }\n  }\n\n  render() {\n    return (\n      <div className='rmdb-searchbar'>\n        <div className='rmdb-container'>\n          <form className='rmdb-searchbar-form' onSubmit={this.handleSubmit}>\n            <label className='rmdb-searchbar-label'>\n              <FontAwesomeIcon className='rmdb-searchbar-icon' icon='search' />\n              <span className='visually-hidden'>Search</span>\n              <input\n                type='text'\n                name='search'\n                className='rmdb-searchbar-input'\n                placeholder='Search'\n                onFocus={this.selectText}\n                onChange={this.handleInput}\n                value={this.state.value}\n              />\n            </label>\n            <button className='rmdb-searchbar-submit'>Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className='loader' />;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getBackdropUrl, getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Grid from '../elements/Grid/Grid';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Home = ({ loading, movies, currentPage, totalPages, updateItems }) => {\n  const heroImage = movies.length > 0 ? movies[0] : {};\n  return (\n    <Page>\n      <MetaTags\n        title={'RMDB - Popular Movies'}\n        desc={\n          'React Movie (or RMDB) is a database for searching information about movies and actors'\n        }\n        image={getBackdropUrl(heroImage.backdrop_path)}\n      />\n      <HeroImage\n        image={getBackdropUrl(heroImage.backdrop_path)}\n        title={heroImage.original_title}\n        text={heroImage.overview}\n      />\n      <SearchBar />\n      <Grid header={'Popular Movies'} loading={loading}>\n        {movies.map(el => (\n          <MovieThumb\n            key={el.id}\n            clickable\n            title={el.title}\n            year={el.release_date && el.release_date.slice(0, 4)}\n            image={getPosterUrl(el.poster_path)}\n            movieId={el.id}\n            movieName={el.title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text='Load More' onClick={updateItems} />\n      )}\n    </Page>\n  );\n};\n\nexport default RMDBService(Home, 'movie', 'popular');\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../../config';\nimport styles from './actor.module.css';\n\nconst Actor = ({ actor }) => (\n  <div className={styles.card}>\n    <Link to={`/actor/${actor.id}`} className={styles.image}>\n      <img src={getProfileUrl(actor.profile_path)} alt={actor.name} />\n    </Link>\n    <div className={styles.info}>\n      <Link to={`/actor/${actor.id}`} className={styles.link}>\n        <p className={styles.name}>{actor.name}</p>\n      </Link>\n      <p className={styles.character}>{actor.character}</p>\n    </div>\n  </div>\n);\n\nexport default Actor;\n","import React from 'react';\nimport './LinkBtn.css';\n\nconst LinkBtn = ({ children, onClick }) => {\n  return (\n    <button type='button' className='rmdb-link-btn' onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default LinkBtn;\n","import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport LinkBtn from '../LinkBtn/LinkBtn';\nimport styles from './modal.module.css';\n\nconst Modal = ({ children, title, show, onClose }) => {\n  const overlayClass = show ? styles.open : styles.overlay;\n  const onOverlayClick = e => {\n    if (e.target.className === overlayClass) {\n      onClose(e);\n    }\n  };\n  useEffect(() => {\n    const onEscPress = e => (e.keyCode === 27 && show ? onClose() : null);\n    window.addEventListener('keydown', onEscPress);\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n  });\n  return (\n    <div className={overlayClass} onClick={onOverlayClick}>\n      <div className={styles.content}>\n        <div className={styles.header}>\n          <span>{title}</span>\n          <LinkBtn onClick={onClose}>\n            <FontAwesomeIcon icon='times' size='1x' />\n            <span className='visually-hidden'>close</span>\n          </LinkBtn>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { player } from './trailer.module.css';\n\nconst Trailer = ({ title, trailerURL }) => {\n  return (\n    <iframe\n      className={player}\n      title={`${title} - Official Trailer`}\n      width='560'\n      height='315'\n      src={trailerURL}\n      frameBorder='0'\n      allow='accelerometer; autoplay; encrypted-media; gyroscope'\n      allowFullScreen\n    />\n  );\n};\n\nexport default Trailer;\n","import React, { useState } from 'react';\nimport { VIDEO_URL, getBackdropUrl, getPosterUrl } from '../../../config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport Modal from '../Modal/Modal';\nimport Trailer from '../Trailer/Trailer';\nimport LinkBtn from '../LinkBtn/LinkBtn';\n\nimport './Info.css';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    genres,\n    overview,\n    vote_average,\n    credits,\n    videos\n  } = movie;\n  const bgImage = {\n    backgroundImage: `url(${getBackdropUrl(backdrop_path)})`\n  };\n  const trailerId = videos.results.filter(({ type }) => type === 'Trailer')[0]\n    .key;\n  const trailerURL = `${VIDEO_URL}${trailerId}`;\n  const directors = credits.crew.filter(crew => crew.job === 'Director');\n  const genresNames = genres.map(g => g.name).join(', ');\n  const [modalOpen, setModalOpen] = useState(false);\n  const changeModalOpen = bool => () => {\n    setModalOpen(bool);\n  };\n  return (\n    <div className='rmdb-info' style={bgImage}>\n      <div className='rmdb-info-content rmdb-container clearfix'>\n        <div className='rmdb-info-thumb'>\n          <MovieThumb image={getPosterUrl(poster_path)} />\n        </div>\n        <div className='rmdb-info-text'>\n          <h1>{title}</h1>\n          <LinkBtn onClick={changeModalOpen(true)}>\n            <FontAwesomeIcon icon='play' size='1x' /> Play trailer\n          </LinkBtn>\n          <Modal\n            title={'Play Trailer'}\n            show={modalOpen}\n            onClose={changeModalOpen(false)}\n          >\n            <Trailer trailerURL={modalOpen ? trailerURL : null} title={title} />\n          </Modal>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <div className='rmdb-info-sections'>\n            <div className='rmdb-info-section'>\n              <h2>Genres</h2>\n              <p>{genresNames}</p>\n            </div>\n            <div className='rmdb-info-section'>\n              <h2>IMDB rating</h2>\n              <div className='rmdb-rating'>\n                <meter\n                  className='rmdb-rating-scale'\n                  min='0'\n                  max='100'\n                  optimum='100'\n                  low='40'\n                  high='70'\n                  value={vote_average * 10}\n                />\n                <p className='rmdb-rating-score'>{vote_average}</p>\n              </div>\n            </div>\n            <div className='rmdb-info-section'>\n              {directors.length > 1 ? <h2>Directors</h2> : <h2>Director</h2>}\n              <p>{directors.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  if (!time || time === 0) {\n    return 'n/a';\n  }\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  if (!money || money === 0) {\n    return 'n/a';\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const getAge = (birthString, deathString) => {\n  var deathDate = deathString ? new Date(deathString) : new Date();\n  var birthDate = new Date(birthString);\n  var age = deathDate.getFullYear() - birthDate.getFullYear();\n  var m = deathDate.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && deathDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './InfoBar.css';\n\nconst MovieInfoBar = ({\n  movie: { runtime, budget, revenue, release_date }\n}) => (\n  <div className='rmdb-infobar'>\n    <ul className='rmdb-infobar-list rmdb-container'>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>Release date: {release_date}</span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'clock']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Running time: {calcTime(runtime)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon={['far', 'money-bill-alt']} size='2x' />\n        <span className='rmdb-infobar-info'>\n          Budget: {convertMoney(budget)}\n        </span>\n      </li>\n      <li className='rmdb-infobar-item'>\n        <FontAwesomeIcon icon='ticket-alt' size='2x' />\n        <span className='rmdb-infobar-info'>\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumbs.css';\n\nconst Breadcrumbs = ({ title }) => {\n  return (\n    <div className='rmdb-breadcrumbs'>\n      <div className='rmdb-container'>\n        <ul className='rmdb-breadcrumbs-list'>\n          <li className='rmdb-breadcrumbs-item'>\n            <Link to='/'>Home</Link>\n          </li>\n          <li className='rmdb-breadcrumbs-item'>{title}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Actor from '../elements/Actor/Actor';\nimport Grid from '../elements/Grid/Grid';\nimport MovieInfo from '../elements/Info/MovieInfo';\nimport MovieInfoBar from '../elements/InfoBar/MovieInfoBar';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Movie = ({ response, loading }) => {\n  const actors = response && response.credits.cast;\n  return (\n    <Page>\n      {response && (\n        <>\n          <MetaTags\n            title={`RMDB - \"${response.title}\"`}\n            desc={response.overview}\n            image={getPosterUrl(response.poster_path)}\n          />\n          <Breadcrumbs title={response.title} />\n          <MovieInfo movie={response} />\n          <MovieInfoBar movie={response} />\n        </>\n      )}\n      {actors && (\n        <Grid header={'Actors'} loading={loading} isActors>\n          {actors.map(actor => (\n            <Actor key={actor.name} actor={actor} />\n          ))}\n        </Grid>\n      )}\n      {loading && <Spinner />}\n      {!actors && !loading && <h1>Not found!</h1>}\n    </Page>\n  );\n};\n\nexport default RMDBService(Movie, 'movie', null, ['credits', 'videos']);\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Grid from '../elements/Grid/Grid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Search = ({\n  loading,\n  movies,\n  currentPage,\n  totalPages,\n  updateItems,\n  searchTerm\n}) => {\n  const title = `Search results for \"${searchTerm}\"`;\n  return (\n    <Page>\n      <MetaTags title={`RMDB - Search: ${searchTerm}`} desc={title} />\n      <SearchBar />\n      <Grid header={title} loading={loading}>\n        {movies.map(el => (\n          <MovieThumb\n            key={el.id}\n            clickable\n            title={el.title}\n            year={el.release_date && el.release_date.slice(0, 4)}\n            image={getPosterUrl(el.poster_path)}\n            movieId={el.id}\n            movieName={el.title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text='Load More' onClick={updateItems} />\n      )}\n    </Page>\n  );\n};\n\nexport default RMDBService(Search, 'search', 'movie');\n","import React from 'react';\nimport { getPosterUrl } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Info.css';\n\nconst ActorInfo = ({ actor: { profile_path, name, biography } }) => (\n  <div className='rmdb-info'>\n    <div className='rmdb-info-content rmdb-container clearfix'>\n      <div className='rmdb-info-thumb'>\n        <MovieThumb image={getPosterUrl(profile_path)} />\n      </div>\n      <div className='rmdb-info-text'>\n        <h1>{name}</h1>\n        {biography && (\n          <>\n            <h2>Biography</h2>\n            <p>{biography}</p>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ActorInfo;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getAge } from '../../../helpers';\nimport './InfoBar.css';\n\nconst genders = [\n  { gen: 'n/a', icon: 'genderless' },\n  { gen: 'Female', icon: 'venus' },\n  { gen: 'Male', icon: 'mars' }\n];\n\nconst ActorInfoBar = ({\n  actor: { gender, birthday, deathday, place_of_birth }\n}) => {\n  const age = getAge(birthday, deathday);\n  const ageStr = `${birthday} – ${\n    deathday ? deathday : 'now'\n  } (${age} years old)`;\n  const { gen, icon } = genders[gender];\n  return (\n    <div className='rmdb-infobar'>\n      <ul className='rmdb-infobar-list rmdb-container'>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={['far', 'calendar-alt']} size='2x' />\n          <span className='rmdb-infobar-info'>\n            Age: {birthday ? ageStr : 'n/a'}\n          </span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon={icon} size='2x' />\n          <span className='rmdb-infobar-info'>Gender: {gen}</span>\n        </li>\n        <li className='rmdb-infobar-item'>\n          <FontAwesomeIcon icon='globe' size='2x' />\n          <span className='rmdb-infobar-info'>\n            Place of birth: {place_of_birth ? place_of_birth : 'n/a'}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorInfoBar;\n","import React from 'react';\nimport MetaTags from '../elements/MetaTags/MetaTags';\nimport RMDBService from '../../services/RMDBService';\n\nimport { getPosterUrl, getThumbUrl } from '../../config';\nimport Page from '../elements/Page/Page';\nimport Breadcrumbs from '../elements/Breadcrumbs/Breadcrumbs';\nimport ActorInfo from '../elements/Info/ActorInfo';\nimport ActorInfoBar from '../elements/InfoBar/ActorInfoBar';\nimport Grid from '../elements/Grid/Grid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport Spinner from '../elements/Spinner/Spinner';\n\nconst Actor = ({ response, loading }) => {\n  const movies = response && response.movie_credits.cast;\n  return (\n    <Page>\n      {response && (\n        <>\n          <MetaTags\n            title={`RMDB - ${response.name}`}\n            desc={response.biography}\n            image={getPosterUrl(response.profile_path)}\n          />\n          <Breadcrumbs title={response.name} />\n          <ActorInfo actor={response} />\n          <ActorInfoBar actor={response} />\n        </>\n      )}\n      {movies && (\n        <Grid\n          header={`${movies.length} Movies with ${response.name}`}\n          loading={loading}\n        >\n          {movies\n            .sort((a, b) => {\n              return new Date(b.release_date) - new Date(a.release_date);\n            })\n            .map(el => (\n              <MovieThumb\n                key={el.id}\n                clickable\n                title={el.title}\n                year={el.release_date && el.release_date.slice(0, 4)}\n                image={getThumbUrl(el.poster_path)}\n                movieId={el.id}\n                gender={response.gender}\n                character={el.character}\n              />\n            ))}\n        </Grid>\n      )}\n      {loading && <Spinner />}\n      {!movies && !loading && <h1>Not found!</h1>}\n    </Page>\n  );\n};\n\nexport default RMDBService(Actor, 'person', null, [\n  'images',\n  'movie_credits',\n  'tv_credits'\n]);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ErrorBoundary from '../ErrorBoundary';\nimport Header from '../elements/Header/Header';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../pages/Home';\nimport Movie from '../pages/Movie';\nimport Search from '../pages/Search';\nimport Actor from '../pages/Actor';\n\nconst App = () => {\n  return (\n    <ErrorBoundary>\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/search/:searchTerm' component={Search} exact />\n          <Route path='/movie/:id' component={Movie} exact />\n          <Route path='/actor/:id' component={Actor} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faSearch,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe,\n  faPlay,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt\n} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  fab,\n  faSearch,\n  faCalendarAlt,\n  faClock,\n  faMoneyBillAlt,\n  faTicketAlt,\n  faGenderless,\n  faMars,\n  faVenus,\n  faGlobe,\n  faPlay,\n  faTimes\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './FAicons';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}